/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['model.js']) {
  _$jscoverage['model.js'] = [];
  _$jscoverage['model.js'][1] = 0;
  _$jscoverage['model.js'][2] = 0;
  _$jscoverage['model.js'][3] = 0;
  _$jscoverage['model.js'][5] = 0;
  _$jscoverage['model.js'][6] = 0;
  _$jscoverage['model.js'][7] = 0;
  _$jscoverage['model.js'][9] = 0;
  _$jscoverage['model.js'][12] = 0;
  _$jscoverage['model.js'][13] = 0;
  _$jscoverage['model.js'][14] = 0;
  _$jscoverage['model.js'][16] = 0;
  _$jscoverage['model.js'][19] = 0;
  _$jscoverage['model.js'][20] = 0;
  _$jscoverage['model.js'][21] = 0;
  _$jscoverage['model.js'][22] = 0;
  _$jscoverage['model.js'][27] = 0;
  _$jscoverage['model.js'][28] = 0;
  _$jscoverage['model.js'][29] = 0;
  _$jscoverage['model.js'][30] = 0;
  _$jscoverage['model.js'][35] = 0;
  _$jscoverage['model.js'][36] = 0;
  _$jscoverage['model.js'][37] = 0;
  _$jscoverage['model.js'][38] = 0;
  _$jscoverage['model.js'][43] = 0;
  _$jscoverage['model.js'][44] = 0;
  _$jscoverage['model.js'][45] = 0;
  _$jscoverage['model.js'][46] = 0;
  _$jscoverage['model.js'][51] = 0;
  _$jscoverage['model.js'][52] = 0;
  _$jscoverage['model.js'][53] = 0;
  _$jscoverage['model.js'][54] = 0;
  _$jscoverage['model.js'][55] = 0;
  _$jscoverage['model.js'][60] = 0;
  _$jscoverage['model.js'][61] = 0;
  _$jscoverage['model.js'][62] = 0;
  _$jscoverage['model.js'][63] = 0;
  _$jscoverage['model.js'][68] = 0;
  _$jscoverage['model.js'][69] = 0;
  _$jscoverage['model.js'][70] = 0;
  _$jscoverage['model.js'][71] = 0;
  _$jscoverage['model.js'][73] = 0;
  _$jscoverage['model.js'][74] = 0;
  _$jscoverage['model.js'][75] = 0;
  _$jscoverage['model.js'][76] = 0;
  _$jscoverage['model.js'][78] = 0;
  _$jscoverage['model.js'][79] = 0;
  _$jscoverage['model.js'][86] = 0;
  _$jscoverage['model.js'][87] = 0;
  _$jscoverage['model.js'][88] = 0;
  _$jscoverage['model.js'][91] = 0;
  _$jscoverage['model.js'][92] = 0;
  _$jscoverage['model.js'][95] = 0;
  _$jscoverage['model.js'][97] = 0;
  _$jscoverage['model.js'][98] = 0;
  _$jscoverage['model.js'][99] = 0;
  _$jscoverage['model.js'][101] = 0;
  _$jscoverage['model.js'][102] = 0;
  _$jscoverage['model.js'][103] = 0;
  _$jscoverage['model.js'][104] = 0;
  _$jscoverage['model.js'][106] = 0;
  _$jscoverage['model.js'][107] = 0;
  _$jscoverage['model.js'][114] = 0;
  _$jscoverage['model.js'][115] = 0;
  _$jscoverage['model.js'][116] = 0;
  _$jscoverage['model.js'][117] = 0;
  _$jscoverage['model.js'][118] = 0;
  _$jscoverage['model.js'][120] = 0;
  _$jscoverage['model.js'][121] = 0;
  _$jscoverage['model.js'][128] = 0;
  _$jscoverage['model.js'][129] = 0;
  _$jscoverage['model.js'][132] = 0;
  _$jscoverage['model.js'][133] = 0;
  _$jscoverage['model.js'][136] = 0;
  _$jscoverage['model.js'][137] = 0;
  _$jscoverage['model.js'][138] = 0;
  _$jscoverage['model.js'][139] = 0;
  _$jscoverage['model.js'][142] = 0;
  _$jscoverage['model.js'][143] = 0;
  _$jscoverage['model.js'][144] = 0;
  _$jscoverage['model.js'][145] = 0;
  _$jscoverage['model.js'][154] = 0;
  _$jscoverage['model.js'][155] = 0;
  _$jscoverage['model.js'][161] = 0;
  _$jscoverage['model.js'][162] = 0;
  _$jscoverage['model.js'][163] = 0;
  _$jscoverage['model.js'][164] = 0;
  _$jscoverage['model.js'][166] = 0;
  _$jscoverage['model.js'][167] = 0;
  _$jscoverage['model.js'][168] = 0;
  _$jscoverage['model.js'][169] = 0;
  _$jscoverage['model.js'][173] = 0;
  _$jscoverage['model.js'][174] = 0;
  _$jscoverage['model.js'][175] = 0;
  _$jscoverage['model.js'][176] = 0;
  _$jscoverage['model.js'][179] = 0;
  _$jscoverage['model.js'][180] = 0;
  _$jscoverage['model.js'][187] = 0;
  _$jscoverage['model.js'][188] = 0;
  _$jscoverage['model.js'][189] = 0;
  _$jscoverage['model.js'][190] = 0;
  _$jscoverage['model.js'][194] = 0;
  _$jscoverage['model.js'][195] = 0;
  _$jscoverage['model.js'][205] = 0;
  _$jscoverage['model.js'][208] = 0;
  _$jscoverage['model.js'][214] = 0;
  _$jscoverage['model.js'][215] = 0;
  _$jscoverage['model.js'][216] = 0;
  _$jscoverage['model.js'][217] = 0;
  _$jscoverage['model.js'][218] = 0;
  _$jscoverage['model.js'][221] = 0;
  _$jscoverage['model.js'][222] = 0;
  _$jscoverage['model.js'][223] = 0;
  _$jscoverage['model.js'][224] = 0;
  _$jscoverage['model.js'][227] = 0;
  _$jscoverage['model.js'][228] = 0;
  _$jscoverage['model.js'][229] = 0;
  _$jscoverage['model.js'][235] = 0;
  _$jscoverage['model.js'][236] = 0;
  _$jscoverage['model.js'][237] = 0;
  _$jscoverage['model.js'][238] = 0;
  _$jscoverage['model.js'][243] = 0;
  _$jscoverage['model.js'][244] = 0;
  _$jscoverage['model.js'][245] = 0;
  _$jscoverage['model.js'][246] = 0;
  _$jscoverage['model.js'][252] = 0;
  _$jscoverage['model.js'][253] = 0;
  _$jscoverage['model.js'][254] = 0;
  _$jscoverage['model.js'][255] = 0;
  _$jscoverage['model.js'][261] = 0;
  _$jscoverage['model.js'][262] = 0;
  _$jscoverage['model.js'][263] = 0;
  _$jscoverage['model.js'][264] = 0;
  _$jscoverage['model.js'][265] = 0;
  _$jscoverage['model.js'][267] = 0;
  _$jscoverage['model.js'][268] = 0;
  _$jscoverage['model.js'][269] = 0;
  _$jscoverage['model.js'][270] = 0;
  _$jscoverage['model.js'][271] = 0;
  _$jscoverage['model.js'][272] = 0;
  _$jscoverage['model.js'][273] = 0;
  _$jscoverage['model.js'][274] = 0;
  _$jscoverage['model.js'][281] = 0;
  _$jscoverage['model.js'][282] = 0;
  _$jscoverage['model.js'][283] = 0;
  _$jscoverage['model.js'][284] = 0;
  _$jscoverage['model.js'][285] = 0;
  _$jscoverage['model.js'][286] = 0;
  _$jscoverage['model.js'][287] = 0;
  _$jscoverage['model.js'][288] = 0;
  _$jscoverage['model.js'][289] = 0;
  _$jscoverage['model.js'][290] = 0;
  _$jscoverage['model.js'][291] = 0;
  _$jscoverage['model.js'][292] = 0;
  _$jscoverage['model.js'][293] = 0;
  _$jscoverage['model.js'][295] = 0;
  _$jscoverage['model.js'][296] = 0;
  _$jscoverage['model.js'][297] = 0;
  _$jscoverage['model.js'][298] = 0;
  _$jscoverage['model.js'][299] = 0;
}
_$jscoverage['model.js'].source = ["<span class=\"k\">var</span> mongo <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">'mongodb'</span><span class=\"k\">);</span>","<span class=\"k\">var</span> mongo_server <span class=\"k\">=</span> <span class=\"k\">new</span> mongo<span class=\"k\">.</span>Server<span class=\"k\">(</span><span class=\"s\">'localhost'</span><span class=\"k\">,</span> <span class=\"s\">27017</span><span class=\"k\">);</span>","<span class=\"k\">var</span> db <span class=\"k\">=</span> <span class=\"k\">new</span> mongo<span class=\"k\">.</span>Db<span class=\"k\">(</span><span class=\"s\">'tdp013-project'</span><span class=\"k\">,</span> mongo_server<span class=\"k\">);</span>","","db<span class=\"k\">.</span>open<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> db<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">if</span><span class=\"k\">(</span>err <span class=\"k\">!=</span> undefined<span class=\"k\">)</span>","\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Error connecting to database: \"</span> <span class=\"k\">+</span> err<span class=\"k\">);</span>","\t<span class=\"k\">else</span>","\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Opened a connection to the database\"</span><span class=\"k\">);</span>","<span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"k\">function</span> object_id<span class=\"k\">(</span>id<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">if</span><span class=\"k\">(</span><span class=\"k\">typeof</span> id <span class=\"k\">==</span> <span class=\"s\">\"string\"</span><span class=\"k\">)</span>","\t\t<span class=\"k\">return</span> <span class=\"k\">new</span> mongo<span class=\"k\">.</span>BSONPure<span class=\"k\">.</span>ObjectID<span class=\"k\">(</span>id<span class=\"k\">);</span>","\t","\t<span class=\"k\">return</span> id<span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> register_user<span class=\"k\">(</span>user<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>insert<span class=\"k\">(</span>user<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> record<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(</span>error<span class=\"k\">,</span> record<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> username_exists<span class=\"k\">(</span>username<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>username<span class=\"k\">:</span> username<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>e<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(!!</span>doc<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> validate_login<span class=\"k\">(</span>user<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","    db<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","        collection<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>username<span class=\"k\">:</span> user<span class=\"k\">.</span>username<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> dbUser<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(</span>dbUser <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> user<span class=\"k\">.</span>password <span class=\"k\">==</span> dbUser<span class=\"k\">.</span>password<span class=\"k\">,</span> dbUser<span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> login_user<span class=\"k\">(</span>user<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","    db<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","        collection<span class=\"k\">.</span>update<span class=\"k\">(</span><span class=\"k\">{</span>username<span class=\"k\">:</span> user<span class=\"k\">.</span>username<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">{</span>$set<span class=\"k\">:</span> <span class=\"k\">{</span>logged_in<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">}}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>update_error<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(</span>error<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> logout_user<span class=\"k\">(</span>user_id<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","    db<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">var</span> id <span class=\"k\">=</span> object_id<span class=\"k\">(</span>user_id<span class=\"k\">);</span>","        collection<span class=\"k\">.</span>update<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> id<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">{</span>$set<span class=\"k\">:</span> <span class=\"k\">{</span>logged_in<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">}}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>update_error<span class=\"k\">,</span> doc<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(</span>error<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_user<span class=\"k\">(</span>criteria<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>findOne<span class=\"k\">(</span>criteria<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>user_error<span class=\"k\">,</span> user_doc<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(!</span>error <span class=\"k\">&amp;&amp;</span> user_doc<span class=\"k\">,</span> user_doc<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_users_by_id<span class=\"k\">(</span>ids<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> object_ids <span class=\"k\">=</span> <span class=\"k\">[];</span>","\t<span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> index <span class=\"k\">in</span> ids<span class=\"k\">)</span>","\t\tobject_ids<span class=\"k\">.</span>push<span class=\"k\">(</span>object_id<span class=\"k\">(</span>ids<span class=\"k\">[</span>index<span class=\"k\">]));</span>","","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> <span class=\"k\">{</span>$in<span class=\"k\">:</span> object_ids<span class=\"k\">}}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>find_error<span class=\"k\">,</span> documents<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>find_error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">[]);</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\tdocuments<span class=\"k\">.</span>toArray<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> res<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span>res <span class=\"k\">&amp;&amp;</span> res<span class=\"k\">.</span>length<span class=\"k\">,</span> res<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_user_by_id<span class=\"k\">(</span>user_id<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"k\">var</span> id <span class=\"k\">=</span> object_id<span class=\"k\">(</span>user_id<span class=\"k\">);</span>","\tfind_user<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> id<span class=\"k\">}</span><span class=\"k\">,</span> callback<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_user_by_username<span class=\"k\">(</span>username<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tfind_user<span class=\"k\">(</span><span class=\"k\">{</span>username<span class=\"k\">:</span> username<span class=\"k\">}</span><span class=\"k\">,</span> callback<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> search_users<span class=\"k\">(</span>query<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"c\">// TODO: This can probably be done in a better way.</span>","\t<span class=\"k\">var</span> q <span class=\"k\">=</span> query<span class=\"k\">.</span>replace<span class=\"k\">(</span><span class=\"s\">/'/g</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">);</span>","\t<span class=\"k\">var</span> query_string <span class=\"k\">=</span> <span class=\"s\">\"(this.first_name + ' ' + this.last_name).toLowerCase().indexOf('\"</span> <span class=\"k\">+</span> q <span class=\"k\">+</span> <span class=\"s\">\"') != -1\"</span><span class=\"k\">;</span>","\tquery_string <span class=\"k\">+=</span> <span class=\"s\">\"|| this.username.toLowerCase().indexOf('\"</span> <span class=\"k\">+</span> q <span class=\"k\">+</span> <span class=\"s\">\"') != -1\"</span><span class=\"k\">;</span>","","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>find<span class=\"k\">(</span><span class=\"k\">{</span>$where<span class=\"k\">:</span> query_string<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>find_error<span class=\"k\">,</span> documents<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>find_error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span>find_error<span class=\"k\">,</span> <span class=\"k\">[]);</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\tdocuments<span class=\"k\">.</span>toArray<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> res<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span>undefined<span class=\"k\">,</span> res<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_wallposts<span class=\"k\">(</span>criteria<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"wallpost\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>find<span class=\"k\">(</span>criteria<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>find_error<span class=\"k\">,</span> documents<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>find_error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">[]);</span>","\t\t\t<span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","\t\t\t\tdocuments<span class=\"k\">.</span>toArray<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span>err<span class=\"k\">,</span> res<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">true</span><span class=\"k\">,</span> res<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_wallposts_to_user<span class=\"k\">(</span>user<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tfind_wallposts<span class=\"k\">(</span><span class=\"k\">{</span>to_id<span class=\"k\">:</span> user<span class=\"k\">.</span>_id<span class=\"k\">}</span><span class=\"k\">,</span> callback<span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> add_wallpost<span class=\"k\">(</span>from_id<span class=\"k\">,</span> to_id<span class=\"k\">,</span> post<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"wallpost\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// Wallposts also contain the username of the sender</span>","\t\t<span class=\"c\">// so we need to fetch that before inserting the wallpost.</span>","\t\tfind_user_by_id<span class=\"k\">(</span>from_id<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(!</span>success<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> undefined<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\tto_id <span class=\"k\">=</span> object_id<span class=\"k\">(</span>to_id<span class=\"k\">);</span>","\t\t\tfrom_id <span class=\"k\">=</span> object_id<span class=\"k\">(</span>from_id<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> name <span class=\"k\">=</span> user<span class=\"k\">.</span>first_name <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> user<span class=\"k\">.</span>last_name<span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> wallpost_record <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\tfrom<span class=\"k\">:</span> name<span class=\"k\">,</span>","\t\t\t\tfrom_username<span class=\"k\">:</span> user<span class=\"k\">.</span>username<span class=\"k\">,</span>","\t\t\t\tfrom_id<span class=\"k\">:</span> from_id<span class=\"k\">,</span>","\t\t\t\tto_id<span class=\"k\">:</span> to_id<span class=\"k\">,</span>","\t\t\t\tpost<span class=\"k\">:</span> post<span class=\"k\">,</span>","\t\t\t\tdate<span class=\"k\">:</span> <span class=\"k\">new</span> Date<span class=\"k\">()</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\tcollection<span class=\"k\">.</span>insert<span class=\"k\">(</span>wallpost_record<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>post_error<span class=\"k\">,</span> wallpost_doc<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcallback<span class=\"k\">(!</span>post_error <span class=\"k\">&amp;&amp;</span> wallpost_doc<span class=\"k\">,</span> wallpost_doc<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t<span class=\"k\">}</span><span class=\"k\">)</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> add_friend<span class=\"k\">(</span>user_id<span class=\"k\">,</span> friend_id<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tuser_id <span class=\"k\">=</span> object_id<span class=\"k\">(</span>user_id<span class=\"k\">);</span>","\tfriend_id <span class=\"k\">=</span> object_id<span class=\"k\">(</span>friend_id<span class=\"k\">);</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"user\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"c\">// Make sure the user exists</span>","\t\tcollection<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> user_id<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>user_error<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>user_error <span class=\"k\">||</span> <span class=\"k\">!</span>user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">}</span>","","\t\t\t<span class=\"c\">// Make sure the friend exists</span>","\t\t\tcollection<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> friend_id<span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>friend_error<span class=\"k\">,</span> friend_user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>friend_error <span class=\"k\">||</span> <span class=\"k\">!</span>friend_user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t<span class=\"k\">var</span> friends <span class=\"k\">=</span> user<span class=\"k\">.</span>friends<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">var</span> friend <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\t\tuser_id<span class=\"k\">:</span> friend_user<span class=\"k\">.</span>_id<span class=\"k\">,</span>","\t\t\t\t\tusername<span class=\"k\">:</span> friend_user<span class=\"k\">.</span>username<span class=\"k\">,</span>","\t\t\t\t\tname<span class=\"k\">:</span> friend_user<span class=\"k\">.</span>first_name <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> friend_user<span class=\"k\">.</span>last_name","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"c\">// Make sure the two people aren't already friends</span>","\t\t\t\tcollection<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> user_id<span class=\"k\">,</span> friends<span class=\"k\">:</span> <span class=\"k\">{</span>$elemMatch<span class=\"k\">:</span> <span class=\"k\">{</span>user_id<span class=\"k\">:</span> friend_id<span class=\"k\">}}}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>find_error<span class=\"k\">,</span> match<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>match<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\t<span class=\"c\">// Finally add the friend to the users friends-list</span>","\t\t\t\t\tcollection<span class=\"k\">.</span>update<span class=\"k\">(</span>user<span class=\"k\">,</span> <span class=\"k\">{</span>$addToSet<span class=\"k\">:</span> <span class=\"k\">{</span>friends<span class=\"k\">:</span> friend<span class=\"k\">}}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>update_error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcallback<span class=\"k\">(!</span>update_error<span class=\"k\">);</span>","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"c\">// Chat</span>","","<span class=\"k\">function</span> chat_member<span class=\"k\">(</span>user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t<span class=\"c\">// Returns a structure representing</span>","\t<span class=\"c\">// a chat member</span>","\t<span class=\"k\">return</span> <span class=\"k\">{</span>","\t\tname<span class=\"k\">:</span> user<span class=\"k\">.</span>first_name <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> user<span class=\"k\">.</span>last_name<span class=\"k\">,</span>","\t\tusername<span class=\"k\">:</span> user<span class=\"k\">.</span>username","\t<span class=\"k\">}</span><span class=\"k\">;</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> create_chat<span class=\"k\">(</span>members<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tfind_users_by_id<span class=\"k\">(</span>members<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> users<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t<span class=\"k\">if</span><span class=\"k\">(!</span>success<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Unable to find users for creating chat\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">return</span> callback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\t<span class=\"k\">var</span> chat_members <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","\t\t<span class=\"k\">for</span><span class=\"k\">(</span><span class=\"k\">var</span> index <span class=\"k\">in</span> users<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> user <span class=\"k\">=</span> users<span class=\"k\">[</span>index<span class=\"k\">];</span>","\t\t\tchat_members<span class=\"k\">[</span>user<span class=\"k\">.</span>_id<span class=\"k\">]</span> <span class=\"k\">=</span> chat_member<span class=\"k\">(</span>user<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span>","","\t\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"chat\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcollection<span class=\"k\">.</span>insert<span class=\"k\">(</span><span class=\"k\">{</span>members<span class=\"k\">:</span> chat_members<span class=\"k\">,</span> messages<span class=\"k\">:</span> <span class=\"k\">[]</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> chat<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcallback<span class=\"k\">(!</span>error <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span>chat<span class=\"k\">,</span> chat<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> find_chat_by_id<span class=\"k\">(</span>chat_id<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"chat\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tcollection<span class=\"k\">.</span>findOne<span class=\"k\">(</span><span class=\"k\">{</span>_id<span class=\"k\">:</span> object_id<span class=\"k\">(</span>chat_id<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>find_error<span class=\"k\">,</span> chat<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tcallback<span class=\"k\">(!</span>find_error <span class=\"k\">&amp;&amp;</span> chat<span class=\"k\">,</span> chat<span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> save_message<span class=\"k\">(</span>message<span class=\"k\">,</span> chat_id<span class=\"k\">,</span> user_id<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"chat\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> chat_collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tfind_user_by_id<span class=\"k\">(</span>user_id<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> message_object <span class=\"k\">=</span> <span class=\"k\">{</span>","\t\t\t\tmessage<span class=\"k\">:</span> message<span class=\"k\">,</span>","\t\t\t\tusername<span class=\"k\">:</span> user<span class=\"k\">.</span>username<span class=\"k\">,</span>","\t\t\t\tname<span class=\"k\">:</span> user<span class=\"k\">.</span>first_name <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> user<span class=\"k\">.</span>last_name","\t\t\t<span class=\"k\">}</span><span class=\"k\">;</span>","","\t\t\t<span class=\"k\">var</span> criteria <span class=\"k\">=</span> <span class=\"k\">{</span>_id<span class=\"k\">:</span> object_id<span class=\"k\">(</span>chat_id<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> update <span class=\"k\">=</span> <span class=\"k\">{</span>$addToSet<span class=\"k\">:</span> <span class=\"k\">{</span>messages<span class=\"k\">:</span> message_object<span class=\"k\">}}</span><span class=\"k\">;</span>","\t\t\tchat_collection<span class=\"k\">.</span>update<span class=\"k\">(</span>criteria<span class=\"k\">,</span> update<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\tcallback<span class=\"k\">(!</span>error<span class=\"k\">,</span> message_object<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","<span class=\"k\">function</span> add_chat_member<span class=\"k\">(</span>chat_id<span class=\"k\">,</span> user_id<span class=\"k\">,</span> callback<span class=\"k\">)</span> <span class=\"k\">{</span>","\tdb<span class=\"k\">.</span>collection<span class=\"k\">(</span><span class=\"s\">\"chat\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> chat_collection<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tfind_user_by_id<span class=\"k\">(</span>user_id<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> user<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(!</span>success<span class=\"k\">)</span>","\t\t\t\tcallback<span class=\"k\">(</span><span class=\"k\">false</span><span class=\"k\">);</span>","","\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span>user<span class=\"k\">);</span>","\t\t\tfind_chat_by_id<span class=\"k\">(</span>chat_id<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> chat<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">var</span> members <span class=\"k\">=</span> chat<span class=\"k\">.</span>members<span class=\"k\">;</span>","\t\t\t\tmembers<span class=\"k\">[</span>user_id<span class=\"k\">]</span> <span class=\"k\">=</span> chat_member<span class=\"k\">(</span>user<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">var</span> criteria <span class=\"k\">=</span> <span class=\"k\">{</span>_id<span class=\"k\">:</span> object_id<span class=\"k\">(</span>chat_id<span class=\"k\">)</span><span class=\"k\">}</span><span class=\"k\">;</span>","\t\t\t\tchat_collection<span class=\"k\">.</span>update<span class=\"k\">(</span>criteria<span class=\"k\">,</span> <span class=\"k\">{</span>$set<span class=\"k\">:</span> <span class=\"k\">{</span>members<span class=\"k\">:</span> members<span class=\"k\">}}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span>error<span class=\"k\">);</span>","\t\t\t\t\tcallback<span class=\"k\">(!</span>error<span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">)</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","exports<span class=\"k\">.</span>register_user <span class=\"k\">=</span> register_user<span class=\"k\">;</span>","exports<span class=\"k\">.</span>validate_login <span class=\"k\">=</span> validate_login<span class=\"k\">;</span>","exports<span class=\"k\">.</span>username_exists <span class=\"k\">=</span> username_exists<span class=\"k\">;</span>","exports<span class=\"k\">.</span>login_user <span class=\"k\">=</span> login_user<span class=\"k\">;</span>","exports<span class=\"k\">.</span>logout_user <span class=\"k\">=</span> logout_user<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_user_by_id <span class=\"k\">=</span> find_user_by_id<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_user_by_username <span class=\"k\">=</span> find_user_by_username<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_user <span class=\"k\">=</span> find_user<span class=\"k\">;</span>","exports<span class=\"k\">.</span>search_users <span class=\"k\">=</span> search_users<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_wallposts_to_user <span class=\"k\">=</span> find_wallposts_to_user<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_wallposts <span class=\"k\">=</span> find_wallposts<span class=\"k\">;</span>","exports<span class=\"k\">.</span>add_wallpost <span class=\"k\">=</span> add_wallpost<span class=\"k\">;</span>","exports<span class=\"k\">.</span>add_friend <span class=\"k\">=</span> add_friend<span class=\"k\">;</span>","","exports<span class=\"k\">.</span>create_chat <span class=\"k\">=</span> create_chat<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_chat_by_id <span class=\"k\">=</span> find_chat_by_id<span class=\"k\">;</span>","exports<span class=\"k\">.</span>find_users_by_id <span class=\"k\">=</span> find_users_by_id<span class=\"k\">;</span>","exports<span class=\"k\">.</span>save_message <span class=\"k\">=</span> save_message<span class=\"k\">;</span>","exports<span class=\"k\">.</span>add_chat_member <span class=\"k\">=</span> add_chat_member<span class=\"k\">;</span>"];
_$jscoverage['model.js'][1]++;
var mongo = require("mongodb");
_$jscoverage['model.js'][2]++;
var mongo_server = new (mongo.Server)("localhost", 27017);
_$jscoverage['model.js'][3]++;
var db = new (mongo.Db)("tdp013-project", mongo_server);
_$jscoverage['model.js'][5]++;
db.open((function (err, db) {
  _$jscoverage['model.js'][6]++;
  if ((err != undefined)) {
    _$jscoverage['model.js'][7]++;
    console.log(("Error connecting to database: " + err));
  }
  else {
    _$jscoverage['model.js'][9]++;
    console.log("Opened a connection to the database");
  }
}));
_$jscoverage['model.js'][12]++;
function object_id(id) {
  _$jscoverage['model.js'][13]++;
  if (((typeof id) == "string")) {
    _$jscoverage['model.js'][14]++;
    return new (mongo.BSONPure.ObjectID)(id);
  }
  _$jscoverage['model.js'][16]++;
  return id;
}
_$jscoverage['model.js'][19]++;
function register_user(user, callback) {
  _$jscoverage['model.js'][20]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][21]++;
  collection.insert(user, (function (error, record) {
  _$jscoverage['model.js'][22]++;
  callback(error, record);
}));
}));
}
_$jscoverage['model.js'][27]++;
function username_exists(username, callback) {
  _$jscoverage['model.js'][28]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][29]++;
  collection.findOne({username: username}, (function (e, doc) {
  _$jscoverage['model.js'][30]++;
  callback((! (! doc)));
}));
}));
}
_$jscoverage['model.js'][35]++;
function validate_login(user, callback) {
  _$jscoverage['model.js'][36]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][37]++;
  collection.findOne({username: user.username}, (function (error, dbUser) {
  _$jscoverage['model.js'][38]++;
  callback(((dbUser != null) && (user.password == dbUser.password)), dbUser);
}));
}));
}
_$jscoverage['model.js'][43]++;
function login_user(user, callback) {
  _$jscoverage['model.js'][44]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][45]++;
  collection.update({username: user.username}, {$set: {logged_in: true}}, (function (update_error, doc) {
  _$jscoverage['model.js'][46]++;
  callback(error);
}));
}));
}
_$jscoverage['model.js'][51]++;
function logout_user(user_id, callback) {
  _$jscoverage['model.js'][52]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][53]++;
  var id = object_id(user_id);
  _$jscoverage['model.js'][54]++;
  collection.update({_id: id}, {$set: {logged_in: false}}, (function (update_error, doc) {
  _$jscoverage['model.js'][55]++;
  callback(error);
}));
}));
}
_$jscoverage['model.js'][60]++;
function find_user(criteria, callback) {
  _$jscoverage['model.js'][61]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][62]++;
  collection.findOne(criteria, (function (user_error, user_doc) {
  _$jscoverage['model.js'][63]++;
  callback(((! error) && user_doc), user_doc);
}));
}));
}
_$jscoverage['model.js'][68]++;
function find_users_by_id(ids, callback) {
  _$jscoverage['model.js'][69]++;
  var object_ids = [];
  _$jscoverage['model.js'][70]++;
  for (var index in ids) {
    _$jscoverage['model.js'][71]++;
    object_ids.push(object_id(ids[index]));
}
  _$jscoverage['model.js'][73]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][74]++;
  collection.find({_id: {$in: object_ids}}, (function (find_error, documents) {
  _$jscoverage['model.js'][75]++;
  if (find_error) {
    _$jscoverage['model.js'][76]++;
    callback(false, []);
  }
  else {
    _$jscoverage['model.js'][78]++;
    documents.toArray((function (err, res) {
  _$jscoverage['model.js'][79]++;
  callback((res && res.length), res);
}));
  }
}));
}));
}
_$jscoverage['model.js'][86]++;
function find_user_by_id(user_id, callback) {
  _$jscoverage['model.js'][87]++;
  var id = object_id(user_id);
  _$jscoverage['model.js'][88]++;
  find_user({_id: id}, callback);
}
_$jscoverage['model.js'][91]++;
function find_user_by_username(username, callback) {
  _$jscoverage['model.js'][92]++;
  find_user({username: username}, callback);
}
_$jscoverage['model.js'][95]++;
function search_users(query, callback) {
  _$jscoverage['model.js'][97]++;
  var q = query.replace(/'/g, "");
  _$jscoverage['model.js'][98]++;
  var query_string = ("(this.first_name + ' ' + this.last_name).toLowerCase().indexOf('" + q + "') != -1");
  _$jscoverage['model.js'][99]++;
  query_string += ("|| this.username.toLowerCase().indexOf('" + q + "') != -1");
  _$jscoverage['model.js'][101]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][102]++;
  collection.find({$where: query_string}, (function (find_error, documents) {
  _$jscoverage['model.js'][103]++;
  if (find_error) {
    _$jscoverage['model.js'][104]++;
    callback(find_error, []);
  }
  else {
    _$jscoverage['model.js'][106]++;
    documents.toArray((function (err, res) {
  _$jscoverage['model.js'][107]++;
  callback(undefined, res);
}));
  }
}));
}));
}
_$jscoverage['model.js'][114]++;
function find_wallposts(criteria, callback) {
  _$jscoverage['model.js'][115]++;
  db.collection("wallpost", (function (error, collection) {
  _$jscoverage['model.js'][116]++;
  collection.find(criteria, (function (find_error, documents) {
  _$jscoverage['model.js'][117]++;
  if (find_error) {
    _$jscoverage['model.js'][118]++;
    callback(false, []);
  }
  else {
    _$jscoverage['model.js'][120]++;
    documents.toArray((function (err, res) {
  _$jscoverage['model.js'][121]++;
  callback(true, res);
}));
  }
}));
}));
}
_$jscoverage['model.js'][128]++;
function find_wallposts_to_user(user, callback) {
  _$jscoverage['model.js'][129]++;
  find_wallposts({to_id: user._id}, callback);
}
_$jscoverage['model.js'][132]++;
function add_wallpost(from_id, to_id, post, callback) {
  _$jscoverage['model.js'][133]++;
  db.collection("wallpost", (function (error, collection) {
  _$jscoverage['model.js'][136]++;
  find_user_by_id(from_id, (function (success, user) {
  _$jscoverage['model.js'][137]++;
  if ((! success)) {
    _$jscoverage['model.js'][138]++;
    callback(false, undefined);
    _$jscoverage['model.js'][139]++;
    return;
  }
  _$jscoverage['model.js'][142]++;
  to_id = object_id(to_id);
  _$jscoverage['model.js'][143]++;
  from_id = object_id(from_id);
  _$jscoverage['model.js'][144]++;
  var name = (user.first_name + " " + user.last_name);
  _$jscoverage['model.js'][145]++;
  var wallpost_record = {from: name, from_username: user.username, from_id: from_id, to_id: to_id, post: post, date: new Date()};
  _$jscoverage['model.js'][154]++;
  collection.insert(wallpost_record, (function (post_error, wallpost_doc) {
  _$jscoverage['model.js'][155]++;
  callback(((! post_error) && wallpost_doc), wallpost_doc);
}));
}));
}));
}
_$jscoverage['model.js'][161]++;
function add_friend(user_id, friend_id, callback) {
  _$jscoverage['model.js'][162]++;
  user_id = object_id(user_id);
  _$jscoverage['model.js'][163]++;
  friend_id = object_id(friend_id);
  _$jscoverage['model.js'][164]++;
  db.collection("user", (function (error, collection) {
  _$jscoverage['model.js'][166]++;
  collection.findOne({_id: user_id}, (function (user_error, user) {
  _$jscoverage['model.js'][167]++;
  if ((user_error || (! user))) {
    _$jscoverage['model.js'][168]++;
    callback(false);
    _$jscoverage['model.js'][169]++;
    return;
  }
  _$jscoverage['model.js'][173]++;
  collection.findOne({_id: friend_id}, (function (friend_error, friend_user) {
  _$jscoverage['model.js'][174]++;
  if ((friend_error || (! friend_user))) {
    _$jscoverage['model.js'][175]++;
    callback(false);
    _$jscoverage['model.js'][176]++;
    return;
  }
  _$jscoverage['model.js'][179]++;
  var friends = user.friends;
  _$jscoverage['model.js'][180]++;
  var friend = {user_id: friend_user._id, username: friend_user.username, name: (friend_user.first_name + " " + friend_user.last_name)};
  _$jscoverage['model.js'][187]++;
  collection.findOne({_id: user_id, friends: {$elemMatch: {user_id: friend_id}}}, (function (find_error, match) {
  _$jscoverage['model.js'][188]++;
  if (match) {
    _$jscoverage['model.js'][189]++;
    callback(false);
    _$jscoverage['model.js'][190]++;
    return;
  }
  _$jscoverage['model.js'][194]++;
  collection.update(user, {$addToSet: {friends: friend}}, (function (update_error) {
  _$jscoverage['model.js'][195]++;
  callback((! update_error));
}));
}));
}));
}));
}));
}
_$jscoverage['model.js'][205]++;
function chat_member(user) {
  _$jscoverage['model.js'][208]++;
  return ({name: (user.first_name + " " + user.last_name), username: user.username});
}
_$jscoverage['model.js'][214]++;
function create_chat(members, callback) {
  _$jscoverage['model.js'][215]++;
  find_users_by_id(members, (function (success, users) {
  _$jscoverage['model.js'][216]++;
  if ((! success)) {
    _$jscoverage['model.js'][217]++;
    console.log("Unable to find users for creating chat");
    _$jscoverage['model.js'][218]++;
    return callback(false, null);
  }
  _$jscoverage['model.js'][221]++;
  var chat_members = {};
  _$jscoverage['model.js'][222]++;
  for (var index in users) {
    _$jscoverage['model.js'][223]++;
    var user = users[index];
    _$jscoverage['model.js'][224]++;
    chat_members[user._id] = chat_member(user);
}
  _$jscoverage['model.js'][227]++;
  db.collection("chat", (function (error, collection) {
  _$jscoverage['model.js'][228]++;
  collection.insert({members: chat_members, messages: []}, (function (error, chat) {
  _$jscoverage['model.js'][229]++;
  callback(((! error) && (! (! chat))), chat[0]);
}));
}));
}));
}
_$jscoverage['model.js'][235]++;
function find_chat_by_id(chat_id, callback) {
  _$jscoverage['model.js'][236]++;
  db.collection("chat", (function (error, collection) {
  _$jscoverage['model.js'][237]++;
  collection.findOne({_id: object_id(chat_id)}, (function (find_error, chat) {
  _$jscoverage['model.js'][238]++;
  callback(((! find_error) && chat), chat);
}));
}));
}
_$jscoverage['model.js'][243]++;
function save_message(message, chat_id, user_id, callback) {
  _$jscoverage['model.js'][244]++;
  db.collection("chat", (function (error, chat_collection) {
  _$jscoverage['model.js'][245]++;
  find_user_by_id(user_id, (function (success, user) {
  _$jscoverage['model.js'][246]++;
  var message_object = {message: message, username: user.username, name: (user.first_name + " " + user.last_name)};
  _$jscoverage['model.js'][252]++;
  var criteria = {_id: object_id(chat_id)};
  _$jscoverage['model.js'][253]++;
  var update = {$addToSet: {messages: message_object}};
  _$jscoverage['model.js'][254]++;
  chat_collection.update(criteria, update, (function (error) {
  _$jscoverage['model.js'][255]++;
  callback((! error), message_object);
}));
}));
}));
}
_$jscoverage['model.js'][261]++;
function add_chat_member(chat_id, user_id, callback) {
  _$jscoverage['model.js'][262]++;
  db.collection("chat", (function (error, chat_collection) {
  _$jscoverage['model.js'][263]++;
  find_user_by_id(user_id, (function (success, user) {
  _$jscoverage['model.js'][264]++;
  if ((! success)) {
    _$jscoverage['model.js'][265]++;
    callback(false);
  }
  _$jscoverage['model.js'][267]++;
  console.log(user);
  _$jscoverage['model.js'][268]++;
  find_chat_by_id(chat_id, (function (success, chat) {
  _$jscoverage['model.js'][269]++;
  var members = chat.members;
  _$jscoverage['model.js'][270]++;
  members[user_id] = chat_member(user);
  _$jscoverage['model.js'][271]++;
  var criteria = {_id: object_id(chat_id)};
  _$jscoverage['model.js'][272]++;
  chat_collection.update(criteria, {$set: {members: members}}, (function (error) {
  _$jscoverage['model.js'][273]++;
  console.log(error);
  _$jscoverage['model.js'][274]++;
  callback((! error));
}));
}));
}));
}));
}
_$jscoverage['model.js'][281]++;
exports.register_user = register_user;
_$jscoverage['model.js'][282]++;
exports.validate_login = validate_login;
_$jscoverage['model.js'][283]++;
exports.username_exists = username_exists;
_$jscoverage['model.js'][284]++;
exports.login_user = login_user;
_$jscoverage['model.js'][285]++;
exports.logout_user = logout_user;
_$jscoverage['model.js'][286]++;
exports.find_user_by_id = find_user_by_id;
_$jscoverage['model.js'][287]++;
exports.find_user_by_username = find_user_by_username;
_$jscoverage['model.js'][288]++;
exports.find_user = find_user;
_$jscoverage['model.js'][289]++;
exports.search_users = search_users;
_$jscoverage['model.js'][290]++;
exports.find_wallposts_to_user = find_wallposts_to_user;
_$jscoverage['model.js'][291]++;
exports.find_wallposts = find_wallposts;
_$jscoverage['model.js'][292]++;
exports.add_wallpost = add_wallpost;
_$jscoverage['model.js'][293]++;
exports.add_friend = add_friend;
_$jscoverage['model.js'][295]++;
exports.create_chat = create_chat;
_$jscoverage['model.js'][296]++;
exports.find_chat_by_id = find_chat_by_id;
_$jscoverage['model.js'][297]++;
exports.find_users_by_id = find_users_by_id;
_$jscoverage['model.js'][298]++;
exports.save_message = save_message;
_$jscoverage['model.js'][299]++;
exports.add_chat_member = add_chat_member;
