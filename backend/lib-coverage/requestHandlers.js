/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['requestHandlers.js']) {
  _$jscoverage['requestHandlers.js'] = [];
  _$jscoverage['requestHandlers.js'][1] = 0;
  _$jscoverage['requestHandlers.js'][2] = 0;
  _$jscoverage['requestHandlers.js'][3] = 0;
  _$jscoverage['requestHandlers.js'][4] = 0;
  _$jscoverage['requestHandlers.js'][5] = 0;
  _$jscoverage['requestHandlers.js'][6] = 0;
  _$jscoverage['requestHandlers.js'][7] = 0;
  _$jscoverage['requestHandlers.js'][9] = 0;
  _$jscoverage['requestHandlers.js'][10] = 0;
  _$jscoverage['requestHandlers.js'][13] = 0;
  _$jscoverage['requestHandlers.js'][14] = 0;
  _$jscoverage['requestHandlers.js'][15] = 0;
  _$jscoverage['requestHandlers.js'][19] = 0;
  _$jscoverage['requestHandlers.js'][20] = 0;
  _$jscoverage['requestHandlers.js'][21] = 0;
  _$jscoverage['requestHandlers.js'][22] = 0;
  _$jscoverage['requestHandlers.js'][25] = 0;
  _$jscoverage['requestHandlers.js'][26] = 0;
  _$jscoverage['requestHandlers.js'][27] = 0;
  _$jscoverage['requestHandlers.js'][31] = 0;
  _$jscoverage['requestHandlers.js'][32] = 0;
  _$jscoverage['requestHandlers.js'][33] = 0;
  _$jscoverage['requestHandlers.js'][34] = 0;
  _$jscoverage['requestHandlers.js'][35] = 0;
  _$jscoverage['requestHandlers.js'][38] = 0;
  _$jscoverage['requestHandlers.js'][39] = 0;
  _$jscoverage['requestHandlers.js'][40] = 0;
  _$jscoverage['requestHandlers.js'][41] = 0;
  _$jscoverage['requestHandlers.js'][42] = 0;
  _$jscoverage['requestHandlers.js'][45] = 0;
  _$jscoverage['requestHandlers.js'][46] = 0;
  _$jscoverage['requestHandlers.js'][49] = 0;
  _$jscoverage['requestHandlers.js'][50] = 0;
  _$jscoverage['requestHandlers.js'][51] = 0;
  _$jscoverage['requestHandlers.js'][52] = 0;
  _$jscoverage['requestHandlers.js'][53] = 0;
  _$jscoverage['requestHandlers.js'][54] = 0;
  _$jscoverage['requestHandlers.js'][55] = 0;
  _$jscoverage['requestHandlers.js'][58] = 0;
  _$jscoverage['requestHandlers.js'][59] = 0;
  _$jscoverage['requestHandlers.js'][60] = 0;
  _$jscoverage['requestHandlers.js'][61] = 0;
  _$jscoverage['requestHandlers.js'][66] = 0;
  _$jscoverage['requestHandlers.js'][67] = 0;
  _$jscoverage['requestHandlers.js'][68] = 0;
  _$jscoverage['requestHandlers.js'][69] = 0;
  _$jscoverage['requestHandlers.js'][70] = 0;
  _$jscoverage['requestHandlers.js'][71] = 0;
  _$jscoverage['requestHandlers.js'][72] = 0;
  _$jscoverage['requestHandlers.js'][74] = 0;
  _$jscoverage['requestHandlers.js'][75] = 0;
  _$jscoverage['requestHandlers.js'][77] = 0;
  _$jscoverage['requestHandlers.js'][78] = 0;
  _$jscoverage['requestHandlers.js'][82] = 0;
  _$jscoverage['requestHandlers.js'][83] = 0;
  _$jscoverage['requestHandlers.js'][85] = 0;
  _$jscoverage['requestHandlers.js'][86] = 0;
  _$jscoverage['requestHandlers.js'][87] = 0;
  _$jscoverage['requestHandlers.js'][88] = 0;
  _$jscoverage['requestHandlers.js'][89] = 0;
  _$jscoverage['requestHandlers.js'][92] = 0;
  _$jscoverage['requestHandlers.js'][93] = 0;
  _$jscoverage['requestHandlers.js'][96] = 0;
  _$jscoverage['requestHandlers.js'][97] = 0;
  _$jscoverage['requestHandlers.js'][100] = 0;
  _$jscoverage['requestHandlers.js'][103] = 0;
  _$jscoverage['requestHandlers.js'][104] = 0;
  _$jscoverage['requestHandlers.js'][105] = 0;
  _$jscoverage['requestHandlers.js'][106] = 0;
  _$jscoverage['requestHandlers.js'][107] = 0;
  _$jscoverage['requestHandlers.js'][109] = 0;
  _$jscoverage['requestHandlers.js'][110] = 0;
  _$jscoverage['requestHandlers.js'][111] = 0;
  _$jscoverage['requestHandlers.js'][119] = 0;
  _$jscoverage['requestHandlers.js'][120] = 0;
  _$jscoverage['requestHandlers.js'][121] = 0;
  _$jscoverage['requestHandlers.js'][123] = 0;
  _$jscoverage['requestHandlers.js'][124] = 0;
  _$jscoverage['requestHandlers.js'][126] = 0;
  _$jscoverage['requestHandlers.js'][127] = 0;
  _$jscoverage['requestHandlers.js'][128] = 0;
  _$jscoverage['requestHandlers.js'][129] = 0;
  _$jscoverage['requestHandlers.js'][130] = 0;
  _$jscoverage['requestHandlers.js'][133] = 0;
  _$jscoverage['requestHandlers.js'][134] = 0;
  _$jscoverage['requestHandlers.js'][135] = 0;
  _$jscoverage['requestHandlers.js'][140] = 0;
  _$jscoverage['requestHandlers.js'][147] = 0;
  _$jscoverage['requestHandlers.js'][148] = 0;
  _$jscoverage['requestHandlers.js'][149] = 0;
  _$jscoverage['requestHandlers.js'][150] = 0;
  _$jscoverage['requestHandlers.js'][151] = 0;
  _$jscoverage['requestHandlers.js'][152] = 0;
  _$jscoverage['requestHandlers.js'][153] = 0;
  _$jscoverage['requestHandlers.js'][158] = 0;
  _$jscoverage['requestHandlers.js'][159] = 0;
  _$jscoverage['requestHandlers.js'][162] = 0;
  _$jscoverage['requestHandlers.js'][163] = 0;
  _$jscoverage['requestHandlers.js'][164] = 0;
  _$jscoverage['requestHandlers.js'][165] = 0;
  _$jscoverage['requestHandlers.js'][166] = 0;
  _$jscoverage['requestHandlers.js'][167] = 0;
  _$jscoverage['requestHandlers.js'][170] = 0;
  _$jscoverage['requestHandlers.js'][171] = 0;
  _$jscoverage['requestHandlers.js'][172] = 0;
  _$jscoverage['requestHandlers.js'][177] = 0;
  _$jscoverage['requestHandlers.js'][178] = 0;
  _$jscoverage['requestHandlers.js'][181] = 0;
  _$jscoverage['requestHandlers.js'][182] = 0;
  _$jscoverage['requestHandlers.js'][183] = 0;
  _$jscoverage['requestHandlers.js'][184] = 0;
  _$jscoverage['requestHandlers.js'][185] = 0;
  _$jscoverage['requestHandlers.js'][186] = 0;
  _$jscoverage['requestHandlers.js'][190] = 0;
  _$jscoverage['requestHandlers.js'][191] = 0;
  _$jscoverage['requestHandlers.js'][192] = 0;
  _$jscoverage['requestHandlers.js'][193] = 0;
  _$jscoverage['requestHandlers.js'][194] = 0;
  _$jscoverage['requestHandlers.js'][197] = 0;
  _$jscoverage['requestHandlers.js'][198] = 0;
  _$jscoverage['requestHandlers.js'][199] = 0;
  _$jscoverage['requestHandlers.js'][204] = 0;
  _$jscoverage['requestHandlers.js'][205] = 0;
  _$jscoverage['requestHandlers.js'][206] = 0;
  _$jscoverage['requestHandlers.js'][207] = 0;
  _$jscoverage['requestHandlers.js'][208] = 0;
  _$jscoverage['requestHandlers.js'][211] = 0;
  _$jscoverage['requestHandlers.js'][212] = 0;
  _$jscoverage['requestHandlers.js'][213] = 0;
  _$jscoverage['requestHandlers.js'][214] = 0;
  _$jscoverage['requestHandlers.js'][215] = 0;
  _$jscoverage['requestHandlers.js'][216] = 0;
  _$jscoverage['requestHandlers.js'][217] = 0;
  _$jscoverage['requestHandlers.js'][220] = 0;
  _$jscoverage['requestHandlers.js'][221] = 0;
  _$jscoverage['requestHandlers.js'][226] = 0;
  _$jscoverage['requestHandlers.js'][227] = 0;
  _$jscoverage['requestHandlers.js'][228] = 0;
  _$jscoverage['requestHandlers.js'][229] = 0;
  _$jscoverage['requestHandlers.js'][235] = 0;
  _$jscoverage['requestHandlers.js'][236] = 0;
  _$jscoverage['requestHandlers.js'][237] = 0;
  _$jscoverage['requestHandlers.js'][238] = 0;
  _$jscoverage['requestHandlers.js'][239] = 0;
  _$jscoverage['requestHandlers.js'][241] = 0;
  _$jscoverage['requestHandlers.js'][246] = 0;
  _$jscoverage['requestHandlers.js'][247] = 0;
  _$jscoverage['requestHandlers.js'][250] = 0;
  _$jscoverage['requestHandlers.js'][251] = 0;
  _$jscoverage['requestHandlers.js'][252] = 0;
  _$jscoverage['requestHandlers.js'][253] = 0;
  _$jscoverage['requestHandlers.js'][254] = 0;
  _$jscoverage['requestHandlers.js'][257] = 0;
  _$jscoverage['requestHandlers.js'][258] = 0;
  _$jscoverage['requestHandlers.js'][259] = 0;
  _$jscoverage['requestHandlers.js'][260] = 0;
  _$jscoverage['requestHandlers.js'][262] = 0;
  _$jscoverage['requestHandlers.js'][263] = 0;
  _$jscoverage['requestHandlers.js'][268] = 0;
  _$jscoverage['requestHandlers.js'][269] = 0;
  _$jscoverage['requestHandlers.js'][270] = 0;
  _$jscoverage['requestHandlers.js'][273] = 0;
  _$jscoverage['requestHandlers.js'][278] = 0;
  _$jscoverage['requestHandlers.js'][279] = 0;
  _$jscoverage['requestHandlers.js'][280] = 0;
  _$jscoverage['requestHandlers.js'][281] = 0;
  _$jscoverage['requestHandlers.js'][282] = 0;
  _$jscoverage['requestHandlers.js'][285] = 0;
  _$jscoverage['requestHandlers.js'][286] = 0;
  _$jscoverage['requestHandlers.js'][287] = 0;
  _$jscoverage['requestHandlers.js'][288] = 0;
  _$jscoverage['requestHandlers.js'][289] = 0;
  _$jscoverage['requestHandlers.js'][290] = 0;
  _$jscoverage['requestHandlers.js'][295] = 0;
  _$jscoverage['requestHandlers.js'][296] = 0;
  _$jscoverage['requestHandlers.js'][297] = 0;
  _$jscoverage['requestHandlers.js'][298] = 0;
  _$jscoverage['requestHandlers.js'][299] = 0;
  _$jscoverage['requestHandlers.js'][302] = 0;
  _$jscoverage['requestHandlers.js'][303] = 0;
  _$jscoverage['requestHandlers.js'][304] = 0;
  _$jscoverage['requestHandlers.js'][305] = 0;
  _$jscoverage['requestHandlers.js'][306] = 0;
  _$jscoverage['requestHandlers.js'][307] = 0;
  _$jscoverage['requestHandlers.js'][312] = 0;
  _$jscoverage['requestHandlers.js'][313] = 0;
  _$jscoverage['requestHandlers.js'][314] = 0;
  _$jscoverage['requestHandlers.js'][315] = 0;
  _$jscoverage['requestHandlers.js'][316] = 0;
  _$jscoverage['requestHandlers.js'][319] = 0;
  _$jscoverage['requestHandlers.js'][320] = 0;
  _$jscoverage['requestHandlers.js'][327] = 0;
  _$jscoverage['requestHandlers.js'][328] = 0;
  _$jscoverage['requestHandlers.js'][329] = 0;
  _$jscoverage['requestHandlers.js'][331] = 0;
  _$jscoverage['requestHandlers.js'][332] = 0;
  _$jscoverage['requestHandlers.js'][336] = 0;
  _$jscoverage['requestHandlers.js'][337] = 0;
  _$jscoverage['requestHandlers.js'][346] = 0;
  _$jscoverage['requestHandlers.js'][347] = 0;
  _$jscoverage['requestHandlers.js'][348] = 0;
  _$jscoverage['requestHandlers.js'][349] = 0;
  _$jscoverage['requestHandlers.js'][350] = 0;
  _$jscoverage['requestHandlers.js'][352] = 0;
  _$jscoverage['requestHandlers.js'][353] = 0;
  _$jscoverage['requestHandlers.js'][354] = 0;
  _$jscoverage['requestHandlers.js'][355] = 0;
  _$jscoverage['requestHandlers.js'][356] = 0;
  _$jscoverage['requestHandlers.js'][359] = 0;
  _$jscoverage['requestHandlers.js'][360] = 0;
  _$jscoverage['requestHandlers.js'][361] = 0;
  _$jscoverage['requestHandlers.js'][366] = 0;
  _$jscoverage['requestHandlers.js'][367] = 0;
  _$jscoverage['requestHandlers.js'][368] = 0;
  _$jscoverage['requestHandlers.js'][369] = 0;
  _$jscoverage['requestHandlers.js'][371] = 0;
  _$jscoverage['requestHandlers.js'][372] = 0;
  _$jscoverage['requestHandlers.js'][373] = 0;
  _$jscoverage['requestHandlers.js'][374] = 0;
  _$jscoverage['requestHandlers.js'][379] = 0;
  _$jscoverage['requestHandlers.js'][380] = 0;
  _$jscoverage['requestHandlers.js'][381] = 0;
  _$jscoverage['requestHandlers.js'][382] = 0;
  _$jscoverage['requestHandlers.js'][383] = 0;
  _$jscoverage['requestHandlers.js'][384] = 0;
  _$jscoverage['requestHandlers.js'][385] = 0;
  _$jscoverage['requestHandlers.js'][388] = 0;
  _$jscoverage['requestHandlers.js'][389] = 0;
  _$jscoverage['requestHandlers.js'][390] = 0;
  _$jscoverage['requestHandlers.js'][394] = 0;
  _$jscoverage['requestHandlers.js'][395] = 0;
  _$jscoverage['requestHandlers.js'][396] = 0;
  _$jscoverage['requestHandlers.js'][397] = 0;
  _$jscoverage['requestHandlers.js'][398] = 0;
  _$jscoverage['requestHandlers.js'][399] = 0;
  _$jscoverage['requestHandlers.js'][400] = 0;
  _$jscoverage['requestHandlers.js'][401] = 0;
  _$jscoverage['requestHandlers.js'][402] = 0;
  _$jscoverage['requestHandlers.js'][403] = 0;
  _$jscoverage['requestHandlers.js'][404] = 0;
  _$jscoverage['requestHandlers.js'][405] = 0;
  _$jscoverage['requestHandlers.js'][406] = 0;
  _$jscoverage['requestHandlers.js'][407] = 0;
  _$jscoverage['requestHandlers.js'][408] = 0;
}
_$jscoverage['requestHandlers.js'].source = ["var mongo = require('mongodb');","var util = require('util');","var model = require('./model');","var crypto = require('crypto');","var mu = require('mu2');","var url = require('url');","mu.root = __dirname + '../../../frontend/templates';","","var mongo_server = new mongo.Server('localhost', 27017);","var db = new mongo.Db('tdp013-project', mongo_server);","","// Open a connection to the database","db.open(function(err, db) {","\tif(err) {","\t\tconsole.log(\"Error connecting to database:\\n\" + err);","\t}","});","","function parse_post_data(request, callback) {","\tvar body = \"\";","\trequest.on(\"data\", function(data) {","\t\tbody += data;","\t});","","\trequest.on(\"end\", function() {","\t\tvar post_data = url.parse(request.url + \"?\" + body, true).query;","\t\tcallback(post_data);","\t});","}","","function base(req, res) {","\tmu.clearCache();","\tres.writeHead(200, {'Content-Type': 'text/html'});","\tvar stream = mu.compileAndRender(\"base.html\");","\tstream.pipe(res);","}","","function index(req, res) {","\tmu.clearCache();","\tres.writeHead(200, {'Content-Type': 'text/html'});","\tvar stream = mu.compileAndRender(\"index.html\");","\tstream.pipe(res);","}","","function valid(text) {","\treturn text != undefined &amp;&amp; text.length &gt; 0;","}","","function valid_username(request, response) {","\tvar q = url.parse(request.url, true).query;","\tif(typeof q[\"username\"] == \"undefined\") {","\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\tresponse.write(JSON.stringify({valid: false}));","\t\tresponse.end();","\t\treturn;","\t}","","\tmodel.username_exists(db, q.username, function(exists) {","\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\tresponse.write(JSON.stringify({valid: !exists}));","\t\tresponse.end();","\t});","}","","// User registration","function validate_register_input(fields, callback) {","\tif(!valid(fields.first_name)) return callback(false);","\tif(!valid(fields.last_name)) return callback(false);","\tif(!valid(fields.username)) return callback(false);","\tif(!valid(fields.password)) return callback(false);","\tif(!valid(fields.password_repeat)) return callback(false);","\tif(!valid(fields.email)) return callback(false);","","\tif(fields.password != fields.password_repeat)","\t\treturn callback(false);","","\tmodel.username_exists(db, fields.username, function(exists) {","\t\tcallback(!exists);","\t});","}","","function register(request, response) {","\tparse_post_data(request, function(fields) {","\t\t// Validate form","\t\tvalidate_register_input(fields, function(valid) {","\t\t\tif(!valid) {","\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\tresponse.write(JSON.stringify({success: false}));","\t\t\t\tresponse.end();","\t\t\t} else {","\t\t\t\t// Save user","\t\t\t\tvar user = fields;","\t\t\t\tdelete user[\"password_repeat\"];","","\t\t\t\t// Hash the users password","\t\t\t\tvar salt = crypto.createHash('sha1').update(user.username).digest('hex');","\t\t\t\tuser.password = crypto.createHash('sha1').update(user.password + salt).digest('hex');","","\t\t\t\t// Add a logged in flag to the user","\t\t\t\tuser[\"logged_in\"] = false;","","\t\t\t\t// Insert the user in the database","\t\t\t\tmodel.register_user(db, fields, function(error, record) {","\t\t\t\t\tif(error) {","\t\t\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\t\t\tresponse.write(JSON.stringify({success: false}));","\t\t\t\t\t\tresponse.end();","\t\t\t\t\t} else {","\t\t\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\t\t\tresponse.write(JSON.stringify({success: true}));","\t\t\t\t\t\tresponse.end();","\t\t\t\t\t}","\t\t\t\t});","\t\t\t}","\t\t});","\t});","}","","function login(request, response) {","    parse_post_data(request, function(post_data) {","        var user = post_data;","","\t\tvar salt = crypto.createHash('sha1').update(user.username).digest('hex');","\t\tuser.password = crypto.createHash('sha1').update(user.password + salt).digest('hex');","","        model.validate_login(db, user, function(success, user_document) {","            if(!success) {","\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\tresponse.write(JSON.stringify({success: false}));","\t\t\t\tresponse.end();","\t\t\t} else {","\t\t\t\t// Update the database","\t\t\t\tmodel.login_user(db, user, function(error) {","\t\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\t\tresponse.write(JSON.stringify({","\t\t\t\t\t\tsuccess: !error,","\t\t\t\t\t\terror: error,","\t\t\t\t\t\tuser_id: user_document._id","\t\t\t\t\t}));","\t\t\t\t\tresponse.end();","\t\t\t\t});","\t\t    }","        });","    });","}","","function logout(request, response) {","\tparse_post_data(request, function(post_data) {","\t\tvar user_id = post_data.user_id;","\t\tmodel.logout_user(db, user_id, function(error) {","\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\tresponse.write(JSON.stringify({success: !error}));","\t\t\tresponse.end();","\t\t});","\t});","}","","function homepage(request, response) {","\tmu.clearCache();","","\t// Get user","\tvar user_id = request.headers[\"user-id\"];","\tmodel.find_user_by_id(db, user_id, function(success, user) {","\t\tif(!success) {","\t\t\tresponse.writeHead(500);","\t\t\tresponse.end();","\t\t\treturn;","\t\t}","","\t\tresponse.writeHead(200, {'Content-Type': 'text/html'});","\t\tvar stream = mu.compileAndRender('homepage.mustache', {user: user});","\t\tstream.pipe(response);","\t});","}","","// The logged in users wall","function wall(request, response) {","\tmu.clearCache();","","\t// Get user","\tvar user_id = request.headers[\"user-id\"];","\tmodel.find_user_by_id(db, user_id, function(success, user) {","\t\tif(!success) {","\t\t\tresponse.writeHead(500);","\t\t\tresponse.end();","\t\t\treturn;","\t\t}","","\t\t// Get wallposts","\t\tmodel.find_wallposts_to_user(db, user, function(success, wallposts) {","\t\t\tif(!success) {","\t\t\t\tresponse.writeHead(500);","\t\t\t\tresponse.end();","\t\t\t\treturn;","\t\t\t}","","\t\t\tresponse.writeHead(200, {'Content-Type': 'text/html'});","\t\t\tvar stream = mu.compileAndRender('wall.mustache', {wallposts: wallposts});","\t\t\tstream.pipe(response);","\t\t});","\t});","}","","function search_form(request, response) {","\tmu.clearCache();","\tresponse.writeHead(200, {'Content-Type': 'text/html'});","\tvar stream = mu.compileAndRender('search.mustache');","\tstream.pipe(response);","}","","function search(request, response) {","\tparse_post_data(request, function(post_data) {","\t\tvar query = post_data.query;","\t\tif(!query) {","\t\t\tresponse.writeHead(400);","\t\t\tresponse.end();","\t\t\treturn;","\t\t}","","\t\tmodel.search_users(db, query, function(error, results) {","\t\t\tvar vars = {","\t\t\t\tusers: results,","\t\t\t\tquery: query,","\t\t\t\tcount: results.length","\t\t\t};","\t\t\tresponse.writeHead(200, {'Content-Type': 'text/html'});","\t\t\tconsole.log(response);","\t\t\tvar stream = mu.compileAndRender('search_results.mustache', vars);","\t\t\tstream.pipe(response);","\t\t});","\t});","}","","// Gets the wallposts to a specified user","function wallposts(request, response) {","\tvar params = url.parse(request.url, true).query;","\tvar user_id = params[\"user_id\"];","\tvar ignore_user_id = params[\"ignore\"];","\tvar last_updated = request.headers[\"if-modified-since\"];","\t","\tvar criteria = {","\t\tto_id: new mongo.BSONPure.ObjectID(user_id),","\t\tdate: {$gt: new Date(last_updated)}","\t};","","\tif(ignore_user_id != undefined) {","\t\tcriteria[\"from_id\"] = {$ne: new mongo.BSONPure.ObjectID(ignore_user_id)};","\t}","","\tmodel.find_wallposts(db, criteria, function(success, wallposts) {","\t\tif(!success) {","\t\t\tresponse.writeHead(500);","\t\t\tresponse.end();","\t\t\treturn;","\t\t}","","\t\tif(wallposts.length) {","\t\t\tvar content = \"\";","\t\t\tmu.compileAndRender('wallposts.mustache', {wallposts: wallposts}).on('data', function(data) {","\t\t\t\tcontent += data;","\t\t\t}).on('end', function() {","\t\t\t\tvar last_updated = wallposts[wallposts.length - 1].date;","\t\t\t\tvar data = {","\t\t\t\t\tcontent: content,","\t\t\t\t\tlast_updated: last_updated","\t\t\t\t};","","\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\tresponse.write(JSON.stringify(data));","\t\t\t\tresponse.end();","\t\t\t});","\t\t} else {","\t\t\tresponse.end();","\t\t}","\t});","}","","function show_user(request, response, username) {","\tif(!username) {","\t\tresponse.writeHead(400);","\t\tresponse.end();","\t\treturn;","\t}","","\tvar viewer_id = request.headers[\"user-id\"];","\tmodel.find_user_by_username(db, username, function(success, user) {","\t\tif(!success) {","\t\t\tresponse.writeHead(500);","\t\t\tresponse.end();","\t\t\treturn;","\t\t}","","\t\t// Fetch viewer so we can check if the two people","\t\t// are friends","\t\tmodel.find_user_by_id(db, viewer_id, function(success, viewer) {","\t\t\tif(!success) {","\t\t\t\tresponse.writeHead(500);","\t\t\t\tresponse.end();","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar is_friend = false;","\t\t\tfor(var index in viewer.friends) {","\t\t\t\tvar friend = viewer.friends[index];","\t\t\t\tif(friend.user_id.equals(user._id)) {","\t\t\t\t\tis_friend = true;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","","\t\t\t// Fetch wallposts","\t\t\tmodel.find_wallposts_to_user(db, user, function(success, wallposts) {","\t\t\t\tif(!success) {","\t\t\t\t\tresponse.writeHead(500);","\t\t\t\t\tresponse.end();","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tvar can_post = viewer_id != user._id;","\t\t\t\tvar vars = {","\t\t\t\t\tuser: user,","\t\t\t\t\twallposts: wallposts,","\t\t\t\t\tcan_post: can_post,","\t\t\t\t\tis_friend: is_friend","\t\t\t\t};","","\t\t\t\tvar html = \"\";","\t\t\t\tmu.compileAndRender('user_page.mustache', vars).on('data', function(data) {","\t\t\t\t\thtml += data.toString();","\t\t\t\t}).on('end', function() {","\t\t\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\t\t\tvar data = {","\t\t\t\t\t\tcontent: html,","\t\t\t\t\t\tuser_id: user._id","\t\t\t\t\t};","\t\t\t\t\tresponse.write(JSON.stringify(data));","\t\t\t\t\tresponse.end();","\t\t\t\t});","\t\t\t});","\t\t});","","\t});","","}","","function save_wallpost(request, response) {","\tparse_post_data(request, function(post_data) {","\t\tvar from_id = request.headers[\"user-id\"];","\t\tvar to_id = post_data[\"to_id\"];","\t\tvar post = post_data[\"post\"];","","\t\tmodel.add_wallpost(db, from_id, to_id, post, function(success, wallpost) {","\t\t\tif(!success) {","\t\t\t\tresponse.writeHead(500);","\t\t\t\tresponse.end();","\t\t\t\treturn;","\t\t\t}","","\t\t\tresponse.writeHead(200, {'Content-Type': 'text/html'});","\t\t\tvar stream = mu.compileAndRender('wallpost.mustache', wallpost);","\t\t\tstream.pipe(response);","\t\t});","\t});","}","","function add_friend(request, response) {","\tparse_post_data(request, function(post_data) {","\t\tvar user_id = request.headers[\"user-id\"];","\t\tvar friend_id = post_data[\"friend_id\"];","","\t\tmodel.add_friend(db, user_id, friend_id, function(success) {","\t\t\tresponse.writeHead(200, {'Content-Type': 'application/json'});","\t\t\tresponse.write(JSON.stringify({success: success}));","\t\t\tresponse.end();","\t\t});","\t});","}","","function friends(request, response) {","\tvar user_id = request.headers[\"user-id\"];","\tmodel.find_user_by_id(db, user_id, function(success, user) {","\t\tif(!success) {","\t\t\tresponse.writeHead(500);","\t\t\tresponse.end();","\t\t\treturn;","\t\t}","","\t\tresponse.writeHead(200, {'Content-Type': 'text/html'});","\t\tvar stream = mu.compileAndRender(\"friends.mustache\", {friends: user.friends});","\t\tstream.pipe(response);","\t});","}","","exports.base = base;","exports.index = index;","exports.register = register;","exports.login = login;","exports.logout = logout;","exports.valid_username = valid_username;","exports.homepage = homepage;","exports.wall = wall;","exports.search_form = search_form;","exports.search = search;","exports.show_user = show_user;","exports.save_wallpost = save_wallpost;","exports.wallposts = wallposts;","exports.add_friend = add_friend;","exports.friends = friends;"];
_$jscoverage['requestHandlers.js'][1]++;
var mongo = require("mongodb");
_$jscoverage['requestHandlers.js'][2]++;
var util = require("util");
_$jscoverage['requestHandlers.js'][3]++;
var model = require("./model");
_$jscoverage['requestHandlers.js'][4]++;
var crypto = require("crypto");
_$jscoverage['requestHandlers.js'][5]++;
var mu = require("mu2");
_$jscoverage['requestHandlers.js'][6]++;
var url = require("url");
_$jscoverage['requestHandlers.js'][7]++;
mu.root = (__dirname + "../../../frontend/templates");
_$jscoverage['requestHandlers.js'][9]++;
var mongo_server = new (mongo.Server)("localhost", 27017);
_$jscoverage['requestHandlers.js'][10]++;
var db = new (mongo.Db)("tdp013-project", mongo_server);
_$jscoverage['requestHandlers.js'][13]++;
db.open((function (err, db) {
  _$jscoverage['requestHandlers.js'][14]++;
  if (err) {
    _$jscoverage['requestHandlers.js'][15]++;
    console.log(("Error connecting to database:\n" + err));
  }
}));
_$jscoverage['requestHandlers.js'][19]++;
function parse_post_data(request, callback) {
  _$jscoverage['requestHandlers.js'][20]++;
  var body = "";
  _$jscoverage['requestHandlers.js'][21]++;
  request.on("data", (function (data) {
  _$jscoverage['requestHandlers.js'][22]++;
  body += data;
}));
  _$jscoverage['requestHandlers.js'][25]++;
  request.on("end", (function () {
  _$jscoverage['requestHandlers.js'][26]++;
  var post_data = url.parse((request.url + "?" + body), true).query;
  _$jscoverage['requestHandlers.js'][27]++;
  callback(post_data);
}));
}
_$jscoverage['requestHandlers.js'][31]++;
function base(req, res) {
  _$jscoverage['requestHandlers.js'][32]++;
  mu.clearCache();
  _$jscoverage['requestHandlers.js'][33]++;
  res.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][34]++;
  var stream = mu.compileAndRender("base.html");
  _$jscoverage['requestHandlers.js'][35]++;
  stream.pipe(res);
}
_$jscoverage['requestHandlers.js'][38]++;
function index(req, res) {
  _$jscoverage['requestHandlers.js'][39]++;
  mu.clearCache();
  _$jscoverage['requestHandlers.js'][40]++;
  res.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][41]++;
  var stream = mu.compileAndRender("index.html");
  _$jscoverage['requestHandlers.js'][42]++;
  stream.pipe(res);
}
_$jscoverage['requestHandlers.js'][45]++;
function valid(text) {
  _$jscoverage['requestHandlers.js'][46]++;
  return ((text != undefined) && (text.length > 0));
}
_$jscoverage['requestHandlers.js'][49]++;
function valid_username(request, response) {
  _$jscoverage['requestHandlers.js'][50]++;
  var q = url.parse(request.url, true).query;
  _$jscoverage['requestHandlers.js'][51]++;
  if (((typeof q.username) == "undefined")) {
    _$jscoverage['requestHandlers.js'][52]++;
    response.writeHead(200, {"Content-Type": "application/json"});
    _$jscoverage['requestHandlers.js'][53]++;
    response.write(JSON.stringify({valid: false}));
    _$jscoverage['requestHandlers.js'][54]++;
    response.end();
    _$jscoverage['requestHandlers.js'][55]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][58]++;
  model.username_exists(db, q.username, (function (exists) {
  _$jscoverage['requestHandlers.js'][59]++;
  response.writeHead(200, {"Content-Type": "application/json"});
  _$jscoverage['requestHandlers.js'][60]++;
  response.write(JSON.stringify({valid: (! exists)}));
  _$jscoverage['requestHandlers.js'][61]++;
  response.end();
}));
}
_$jscoverage['requestHandlers.js'][66]++;
function validate_register_input(fields, callback) {
  _$jscoverage['requestHandlers.js'][67]++;
  if ((! valid(fields.first_name))) {
    _$jscoverage['requestHandlers.js'][67]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][68]++;
  if ((! valid(fields.last_name))) {
    _$jscoverage['requestHandlers.js'][68]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][69]++;
  if ((! valid(fields.username))) {
    _$jscoverage['requestHandlers.js'][69]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][70]++;
  if ((! valid(fields.password))) {
    _$jscoverage['requestHandlers.js'][70]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][71]++;
  if ((! valid(fields.password_repeat))) {
    _$jscoverage['requestHandlers.js'][71]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][72]++;
  if ((! valid(fields.email))) {
    _$jscoverage['requestHandlers.js'][72]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][74]++;
  if ((fields.password != fields.password_repeat)) {
    _$jscoverage['requestHandlers.js'][75]++;
    return callback(false);
  }
  _$jscoverage['requestHandlers.js'][77]++;
  model.username_exists(db, fields.username, (function (exists) {
  _$jscoverage['requestHandlers.js'][78]++;
  callback((! exists));
}));
}
_$jscoverage['requestHandlers.js'][82]++;
function register(request, response) {
  _$jscoverage['requestHandlers.js'][83]++;
  parse_post_data(request, (function (fields) {
  _$jscoverage['requestHandlers.js'][85]++;
  validate_register_input(fields, (function (valid) {
  _$jscoverage['requestHandlers.js'][86]++;
  if ((! valid)) {
    _$jscoverage['requestHandlers.js'][87]++;
    response.writeHead(200, {"Content-Type": "application/json"});
    _$jscoverage['requestHandlers.js'][88]++;
    response.write(JSON.stringify({success: false}));
    _$jscoverage['requestHandlers.js'][89]++;
    response.end();
  }
  else {
    _$jscoverage['requestHandlers.js'][92]++;
    var user = fields;
    _$jscoverage['requestHandlers.js'][93]++;
    (delete user.password_repeat);
    _$jscoverage['requestHandlers.js'][96]++;
    var salt = crypto.createHash("sha1").update(user.username).digest("hex");
    _$jscoverage['requestHandlers.js'][97]++;
    user.password = crypto.createHash("sha1").update((user.password + salt)).digest("hex");
    _$jscoverage['requestHandlers.js'][100]++;
    user.logged_in = false;
    _$jscoverage['requestHandlers.js'][103]++;
    model.register_user(db, fields, (function (error, record) {
  _$jscoverage['requestHandlers.js'][104]++;
  if (error) {
    _$jscoverage['requestHandlers.js'][105]++;
    response.writeHead(200, {"Content-Type": "application/json"});
    _$jscoverage['requestHandlers.js'][106]++;
    response.write(JSON.stringify({success: false}));
    _$jscoverage['requestHandlers.js'][107]++;
    response.end();
  }
  else {
    _$jscoverage['requestHandlers.js'][109]++;
    response.writeHead(200, {"Content-Type": "application/json"});
    _$jscoverage['requestHandlers.js'][110]++;
    response.write(JSON.stringify({success: true}));
    _$jscoverage['requestHandlers.js'][111]++;
    response.end();
  }
}));
  }
}));
}));
}
_$jscoverage['requestHandlers.js'][119]++;
function login(request, response) {
  _$jscoverage['requestHandlers.js'][120]++;
  parse_post_data(request, (function (post_data) {
  _$jscoverage['requestHandlers.js'][121]++;
  var user = post_data;
  _$jscoverage['requestHandlers.js'][123]++;
  var salt = crypto.createHash("sha1").update(user.username).digest("hex");
  _$jscoverage['requestHandlers.js'][124]++;
  user.password = crypto.createHash("sha1").update((user.password + salt)).digest("hex");
  _$jscoverage['requestHandlers.js'][126]++;
  model.validate_login(db, user, (function (success, user_document) {
  _$jscoverage['requestHandlers.js'][127]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][128]++;
    response.writeHead(200, {"Content-Type": "application/json"});
    _$jscoverage['requestHandlers.js'][129]++;
    response.write(JSON.stringify({success: false}));
    _$jscoverage['requestHandlers.js'][130]++;
    response.end();
  }
  else {
    _$jscoverage['requestHandlers.js'][133]++;
    model.login_user(db, user, (function (error) {
  _$jscoverage['requestHandlers.js'][134]++;
  response.writeHead(200, {"Content-Type": "application/json"});
  _$jscoverage['requestHandlers.js'][135]++;
  response.write(JSON.stringify({success: (! error), error: error, user_id: user_document._id}));
  _$jscoverage['requestHandlers.js'][140]++;
  response.end();
}));
  }
}));
}));
}
_$jscoverage['requestHandlers.js'][147]++;
function logout(request, response) {
  _$jscoverage['requestHandlers.js'][148]++;
  parse_post_data(request, (function (post_data) {
  _$jscoverage['requestHandlers.js'][149]++;
  var user_id = post_data.user_id;
  _$jscoverage['requestHandlers.js'][150]++;
  model.logout_user(db, user_id, (function (error) {
  _$jscoverage['requestHandlers.js'][151]++;
  response.writeHead(200, {"Content-Type": "application/json"});
  _$jscoverage['requestHandlers.js'][152]++;
  response.write(JSON.stringify({success: (! error)}));
  _$jscoverage['requestHandlers.js'][153]++;
  response.end();
}));
}));
}
_$jscoverage['requestHandlers.js'][158]++;
function homepage(request, response) {
  _$jscoverage['requestHandlers.js'][159]++;
  mu.clearCache();
  _$jscoverage['requestHandlers.js'][162]++;
  var user_id = request.headers["user-id"];
  _$jscoverage['requestHandlers.js'][163]++;
  model.find_user_by_id(db, user_id, (function (success, user) {
  _$jscoverage['requestHandlers.js'][164]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][165]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][166]++;
    response.end();
    _$jscoverage['requestHandlers.js'][167]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][170]++;
  response.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][171]++;
  var stream = mu.compileAndRender("homepage.mustache", {user: user});
  _$jscoverage['requestHandlers.js'][172]++;
  stream.pipe(response);
}));
}
_$jscoverage['requestHandlers.js'][177]++;
function wall(request, response) {
  _$jscoverage['requestHandlers.js'][178]++;
  mu.clearCache();
  _$jscoverage['requestHandlers.js'][181]++;
  var user_id = request.headers["user-id"];
  _$jscoverage['requestHandlers.js'][182]++;
  model.find_user_by_id(db, user_id, (function (success, user) {
  _$jscoverage['requestHandlers.js'][183]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][184]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][185]++;
    response.end();
    _$jscoverage['requestHandlers.js'][186]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][190]++;
  model.find_wallposts_to_user(db, user, (function (success, wallposts) {
  _$jscoverage['requestHandlers.js'][191]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][192]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][193]++;
    response.end();
    _$jscoverage['requestHandlers.js'][194]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][197]++;
  response.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][198]++;
  var stream = mu.compileAndRender("wall.mustache", {wallposts: wallposts});
  _$jscoverage['requestHandlers.js'][199]++;
  stream.pipe(response);
}));
}));
}
_$jscoverage['requestHandlers.js'][204]++;
function search_form(request, response) {
  _$jscoverage['requestHandlers.js'][205]++;
  mu.clearCache();
  _$jscoverage['requestHandlers.js'][206]++;
  response.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][207]++;
  var stream = mu.compileAndRender("search.mustache");
  _$jscoverage['requestHandlers.js'][208]++;
  stream.pipe(response);
}
_$jscoverage['requestHandlers.js'][211]++;
function search(request, response) {
  _$jscoverage['requestHandlers.js'][212]++;
  parse_post_data(request, (function (post_data) {
  _$jscoverage['requestHandlers.js'][213]++;
  var query = post_data.query;
  _$jscoverage['requestHandlers.js'][214]++;
  if ((! query)) {
    _$jscoverage['requestHandlers.js'][215]++;
    response.writeHead(400);
    _$jscoverage['requestHandlers.js'][216]++;
    response.end();
    _$jscoverage['requestHandlers.js'][217]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][220]++;
  model.search_users(db, query, (function (error, results) {
  _$jscoverage['requestHandlers.js'][221]++;
  var vars = {users: results, query: query, count: results.length};
  _$jscoverage['requestHandlers.js'][226]++;
  response.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][227]++;
  console.log(response);
  _$jscoverage['requestHandlers.js'][228]++;
  var stream = mu.compileAndRender("search_results.mustache", vars);
  _$jscoverage['requestHandlers.js'][229]++;
  stream.pipe(response);
}));
}));
}
_$jscoverage['requestHandlers.js'][235]++;
function wallposts(request, response) {
  _$jscoverage['requestHandlers.js'][236]++;
  var params = url.parse(request.url, true).query;
  _$jscoverage['requestHandlers.js'][237]++;
  var user_id = params.user_id;
  _$jscoverage['requestHandlers.js'][238]++;
  var ignore_user_id = params.ignore;
  _$jscoverage['requestHandlers.js'][239]++;
  var last_updated = request.headers["if-modified-since"];
  _$jscoverage['requestHandlers.js'][241]++;
  var criteria = {to_id: new (mongo.BSONPure.ObjectID)(user_id), date: {$gt: new Date(last_updated)}};
  _$jscoverage['requestHandlers.js'][246]++;
  if ((ignore_user_id != undefined)) {
    _$jscoverage['requestHandlers.js'][247]++;
    criteria.from_id = {$ne: new (mongo.BSONPure.ObjectID)(ignore_user_id)};
  }
  _$jscoverage['requestHandlers.js'][250]++;
  model.find_wallposts(db, criteria, (function (success, wallposts) {
  _$jscoverage['requestHandlers.js'][251]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][252]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][253]++;
    response.end();
    _$jscoverage['requestHandlers.js'][254]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][257]++;
  if (wallposts.length) {
    _$jscoverage['requestHandlers.js'][258]++;
    var content = "";
    _$jscoverage['requestHandlers.js'][259]++;
    mu.compileAndRender("wallposts.mustache", {wallposts: wallposts}).on("data", (function (data) {
  _$jscoverage['requestHandlers.js'][260]++;
  content += data;
})).on("end", (function () {
  _$jscoverage['requestHandlers.js'][262]++;
  var last_updated = wallposts[(wallposts.length - 1)].date;
  _$jscoverage['requestHandlers.js'][263]++;
  var data = {content: content, last_updated: last_updated};
  _$jscoverage['requestHandlers.js'][268]++;
  response.writeHead(200, {"Content-Type": "application/json"});
  _$jscoverage['requestHandlers.js'][269]++;
  response.write(JSON.stringify(data));
  _$jscoverage['requestHandlers.js'][270]++;
  response.end();
}));
  }
  else {
    _$jscoverage['requestHandlers.js'][273]++;
    response.end();
  }
}));
}
_$jscoverage['requestHandlers.js'][278]++;
function show_user(request, response, username) {
  _$jscoverage['requestHandlers.js'][279]++;
  if ((! username)) {
    _$jscoverage['requestHandlers.js'][280]++;
    response.writeHead(400);
    _$jscoverage['requestHandlers.js'][281]++;
    response.end();
    _$jscoverage['requestHandlers.js'][282]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][285]++;
  var viewer_id = request.headers["user-id"];
  _$jscoverage['requestHandlers.js'][286]++;
  model.find_user_by_username(db, username, (function (success, user) {
  _$jscoverage['requestHandlers.js'][287]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][288]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][289]++;
    response.end();
    _$jscoverage['requestHandlers.js'][290]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][295]++;
  model.find_user_by_id(db, viewer_id, (function (success, viewer) {
  _$jscoverage['requestHandlers.js'][296]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][297]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][298]++;
    response.end();
    _$jscoverage['requestHandlers.js'][299]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][302]++;
  var is_friend = false;
  _$jscoverage['requestHandlers.js'][303]++;
  for (var index in viewer.friends) {
    _$jscoverage['requestHandlers.js'][304]++;
    var friend = viewer.friends[index];
    _$jscoverage['requestHandlers.js'][305]++;
    if (friend.user_id.equals(user._id)) {
      _$jscoverage['requestHandlers.js'][306]++;
      is_friend = true;
      _$jscoverage['requestHandlers.js'][307]++;
      break;
    }
}
  _$jscoverage['requestHandlers.js'][312]++;
  model.find_wallposts_to_user(db, user, (function (success, wallposts) {
  _$jscoverage['requestHandlers.js'][313]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][314]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][315]++;
    response.end();
    _$jscoverage['requestHandlers.js'][316]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][319]++;
  var can_post = (viewer_id != user._id);
  _$jscoverage['requestHandlers.js'][320]++;
  var vars = {user: user, wallposts: wallposts, can_post: can_post, is_friend: is_friend};
  _$jscoverage['requestHandlers.js'][327]++;
  var html = "";
  _$jscoverage['requestHandlers.js'][328]++;
  mu.compileAndRender("user_page.mustache", vars).on("data", (function (data) {
  _$jscoverage['requestHandlers.js'][329]++;
  html += data.toString();
})).on("end", (function () {
  _$jscoverage['requestHandlers.js'][331]++;
  response.writeHead(200, {"Content-Type": "application/json"});
  _$jscoverage['requestHandlers.js'][332]++;
  var data = {content: html, user_id: user._id};
  _$jscoverage['requestHandlers.js'][336]++;
  response.write(JSON.stringify(data));
  _$jscoverage['requestHandlers.js'][337]++;
  response.end();
}));
}));
}));
}));
}
_$jscoverage['requestHandlers.js'][346]++;
function save_wallpost(request, response) {
  _$jscoverage['requestHandlers.js'][347]++;
  parse_post_data(request, (function (post_data) {
  _$jscoverage['requestHandlers.js'][348]++;
  var from_id = request.headers["user-id"];
  _$jscoverage['requestHandlers.js'][349]++;
  var to_id = post_data.to_id;
  _$jscoverage['requestHandlers.js'][350]++;
  var post = post_data.post;
  _$jscoverage['requestHandlers.js'][352]++;
  model.add_wallpost(db, from_id, to_id, post, (function (success, wallpost) {
  _$jscoverage['requestHandlers.js'][353]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][354]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][355]++;
    response.end();
    _$jscoverage['requestHandlers.js'][356]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][359]++;
  response.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][360]++;
  var stream = mu.compileAndRender("wallpost.mustache", wallpost);
  _$jscoverage['requestHandlers.js'][361]++;
  stream.pipe(response);
}));
}));
}
_$jscoverage['requestHandlers.js'][366]++;
function add_friend(request, response) {
  _$jscoverage['requestHandlers.js'][367]++;
  parse_post_data(request, (function (post_data) {
  _$jscoverage['requestHandlers.js'][368]++;
  var user_id = request.headers["user-id"];
  _$jscoverage['requestHandlers.js'][369]++;
  var friend_id = post_data.friend_id;
  _$jscoverage['requestHandlers.js'][371]++;
  model.add_friend(db, user_id, friend_id, (function (success) {
  _$jscoverage['requestHandlers.js'][372]++;
  response.writeHead(200, {"Content-Type": "application/json"});
  _$jscoverage['requestHandlers.js'][373]++;
  response.write(JSON.stringify({success: success}));
  _$jscoverage['requestHandlers.js'][374]++;
  response.end();
}));
}));
}
_$jscoverage['requestHandlers.js'][379]++;
function friends(request, response) {
  _$jscoverage['requestHandlers.js'][380]++;
  var user_id = request.headers["user-id"];
  _$jscoverage['requestHandlers.js'][381]++;
  model.find_user_by_id(db, user_id, (function (success, user) {
  _$jscoverage['requestHandlers.js'][382]++;
  if ((! success)) {
    _$jscoverage['requestHandlers.js'][383]++;
    response.writeHead(500);
    _$jscoverage['requestHandlers.js'][384]++;
    response.end();
    _$jscoverage['requestHandlers.js'][385]++;
    return;
  }
  _$jscoverage['requestHandlers.js'][388]++;
  response.writeHead(200, {"Content-Type": "text/html"});
  _$jscoverage['requestHandlers.js'][389]++;
  var stream = mu.compileAndRender("friends.mustache", {friends: user.friends});
  _$jscoverage['requestHandlers.js'][390]++;
  stream.pipe(response);
}));
}
_$jscoverage['requestHandlers.js'][394]++;
exports.base = base;
_$jscoverage['requestHandlers.js'][395]++;
exports.index = index;
_$jscoverage['requestHandlers.js'][396]++;
exports.register = register;
_$jscoverage['requestHandlers.js'][397]++;
exports.login = login;
_$jscoverage['requestHandlers.js'][398]++;
exports.logout = logout;
_$jscoverage['requestHandlers.js'][399]++;
exports.valid_username = valid_username;
_$jscoverage['requestHandlers.js'][400]++;
exports.homepage = homepage;
_$jscoverage['requestHandlers.js'][401]++;
exports.wall = wall;
_$jscoverage['requestHandlers.js'][402]++;
exports.search_form = search_form;
_$jscoverage['requestHandlers.js'][403]++;
exports.search = search;
_$jscoverage['requestHandlers.js'][404]++;
exports.show_user = show_user;
_$jscoverage['requestHandlers.js'][405]++;
exports.save_wallpost = save_wallpost;
_$jscoverage['requestHandlers.js'][406]++;
exports.wallposts = wallposts;
_$jscoverage['requestHandlers.js'][407]++;
exports.add_friend = add_friend;
_$jscoverage['requestHandlers.js'][408]++;
exports.friends = friends;
