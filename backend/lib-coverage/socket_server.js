/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['socket_server.js']) {
  _$jscoverage['socket_server.js'] = [];
  _$jscoverage['socket_server.js'][1] = 0;
  _$jscoverage['socket_server.js'][2] = 0;
  _$jscoverage['socket_server.js'][3] = 0;
  _$jscoverage['socket_server.js'][4] = 0;
  _$jscoverage['socket_server.js'][8] = 0;
  _$jscoverage['socket_server.js'][10] = 0;
  _$jscoverage['socket_server.js'][11] = 0;
  _$jscoverage['socket_server.js'][12] = 0;
  _$jscoverage['socket_server.js'][14] = 0;
  _$jscoverage['socket_server.js'][16] = 0;
  _$jscoverage['socket_server.js'][17] = 0;
  _$jscoverage['socket_server.js'][18] = 0;
  _$jscoverage['socket_server.js'][19] = 0;
  _$jscoverage['socket_server.js'][20] = 0;
  _$jscoverage['socket_server.js'][22] = 0;
  _$jscoverage['socket_server.js'][23] = 0;
  _$jscoverage['socket_server.js'][25] = 0;
  _$jscoverage['socket_server.js'][28] = 0;
  _$jscoverage['socket_server.js'][29] = 0;
  _$jscoverage['socket_server.js'][30] = 0;
  _$jscoverage['socket_server.js'][34] = 0;
  _$jscoverage['socket_server.js'][35] = 0;
  _$jscoverage['socket_server.js'][36] = 0;
  _$jscoverage['socket_server.js'][37] = 0;
  _$jscoverage['socket_server.js'][38] = 0;
  _$jscoverage['socket_server.js'][39] = 0;
  _$jscoverage['socket_server.js'][40] = 0;
  _$jscoverage['socket_server.js'][42] = 0;
  _$jscoverage['socket_server.js'][43] = 0;
  _$jscoverage['socket_server.js'][44] = 0;
  _$jscoverage['socket_server.js'][45] = 0;
  _$jscoverage['socket_server.js'][48] = 0;
  _$jscoverage['socket_server.js'][49] = 0;
  _$jscoverage['socket_server.js'][54] = 0;
  _$jscoverage['socket_server.js'][55] = 0;
  _$jscoverage['socket_server.js'][56] = 0;
  _$jscoverage['socket_server.js'][57] = 0;
  _$jscoverage['socket_server.js'][59] = 0;
  _$jscoverage['socket_server.js'][60] = 0;
  _$jscoverage['socket_server.js'][61] = 0;
  _$jscoverage['socket_server.js'][62] = 0;
  _$jscoverage['socket_server.js'][64] = 0;
  _$jscoverage['socket_server.js'][65] = 0;
  _$jscoverage['socket_server.js'][66] = 0;
  _$jscoverage['socket_server.js'][68] = 0;
  _$jscoverage['socket_server.js'][75] = 0;
  _$jscoverage['socket_server.js'][76] = 0;
  _$jscoverage['socket_server.js'][79] = 0;
  _$jscoverage['socket_server.js'][80] = 0;
  _$jscoverage['socket_server.js'][81] = 0;
  _$jscoverage['socket_server.js'][82] = 0;
  _$jscoverage['socket_server.js'][83] = 0;
  _$jscoverage['socket_server.js'][85] = 0;
  _$jscoverage['socket_server.js'][86] = 0;
  _$jscoverage['socket_server.js'][89] = 0;
  _$jscoverage['socket_server.js'][90] = 0;
  _$jscoverage['socket_server.js'][91] = 0;
  _$jscoverage['socket_server.js'][97] = 0;
}
_$jscoverage['socket_server.js'].source = ["<span class=\"k\">var</span> io <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">\"socket.io\"</span><span class=\"k\">);</span>","<span class=\"k\">var</span> model <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">\"./model.js\"</span><span class=\"k\">);</span>","<span class=\"k\">var</span> mu <span class=\"k\">=</span> require<span class=\"k\">(</span><span class=\"s\">\"mu2\"</span><span class=\"k\">);</span>","mu<span class=\"k\">.</span>root <span class=\"k\">=</span> __dirname <span class=\"k\">+</span> <span class=\"s\">'../../../frontend/templates'</span><span class=\"k\">;</span>","","<span class=\"c\">// Key: user_id</span>","<span class=\"c\">// Value: socket</span>","<span class=\"k\">var</span> sockets <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","<span class=\"k\">function</span> bind<span class=\"k\">(</span>server<span class=\"k\">)</span> <span class=\"k\">{</span>","\tio <span class=\"k\">=</span> io<span class=\"k\">.</span>listen<span class=\"k\">(</span>server<span class=\"k\">);</span>","\tio<span class=\"k\">.</span>set<span class=\"k\">(</span><span class=\"s\">'origins'</span><span class=\"k\">,</span> <span class=\"s\">'*:80'</span><span class=\"k\">);</span>","","\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Bound server.\"</span><span class=\"k\">);</span>","","\tio<span class=\"k\">.</span>sockets<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"connection\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>socket<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\tsocket<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"init\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"init\"</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>sockets<span class=\"k\">[</span>data<span class=\"k\">.</span>user_id<span class=\"k\">])</span>","\t\t\t\tsockets<span class=\"k\">[</span>data<span class=\"k\">.</span>user_id<span class=\"k\">].</span>disconnect<span class=\"k\">();</span>","","\t\t\tsocket<span class=\"k\">.</span>set<span class=\"k\">(</span><span class=\"s\">\"user_id\"</span><span class=\"k\">,</span> data<span class=\"k\">.</span>user_id<span class=\"k\">);</span>","\t\t\tsockets<span class=\"k\">[</span>data<span class=\"k\">.</span>user_id<span class=\"k\">]</span> <span class=\"k\">=</span> socket<span class=\"k\">;</span>","","\t\t\tsocket<span class=\"k\">.</span>emit<span class=\"k\">(</span><span class=\"s\">\"inited\"</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\tsocket<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"disconnect\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\tsocket<span class=\"k\">.</span>get<span class=\"k\">(</span><span class=\"s\">\"user_id\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>error<span class=\"k\">,</span> user_id<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">delete</span> sockets<span class=\"k\">[</span>user_id<span class=\"k\">];</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\tsocket<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"create\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> user_id <span class=\"k\">=</span> data<span class=\"k\">.</span>user_id<span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> partner_id <span class=\"k\">=</span> data<span class=\"k\">.</span>partner_id<span class=\"k\">;</span>","\t\t\tmodel<span class=\"k\">.</span>create_chat<span class=\"k\">([</span>user_id<span class=\"k\">,</span> partner_id<span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> chat<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>success<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tsocket<span class=\"k\">.</span>emit<span class=\"k\">(</span><span class=\"s\">\"created\"</span><span class=\"k\">,</span> chat<span class=\"k\">.</span>_id<span class=\"k\">);</span>","\t\t\t\t\tsocket<span class=\"k\">.</span>join<span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>chat<span class=\"k\">.</span>_id<span class=\"k\">));</span>","","\t\t\t\t\t<span class=\"k\">var</span> partner_socket <span class=\"k\">=</span> sockets<span class=\"k\">[</span>partner_id<span class=\"k\">];</span>","\t\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(!</span>partner_socket<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Unable to find partner socket.\"</span><span class=\"k\">);</span>","\t\t\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","\t\t\t\t\t<span class=\"k\">}</span>","","\t\t\t\t\tpartner_socket<span class=\"k\">.</span>emit<span class=\"k\">(</span><span class=\"s\">\"added\"</span><span class=\"k\">,</span> chat<span class=\"k\">.</span>_id<span class=\"k\">);</span>","\t\t\t\t\tpartner_socket<span class=\"k\">.</span>join<span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>chat<span class=\"k\">.</span>_id<span class=\"k\">));</span>","\t\t\t\t<span class=\"k\">}</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\tsocket<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"message\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t<span class=\"k\">var</span> message <span class=\"k\">=</span> data<span class=\"k\">.</span>message<span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> chat_id <span class=\"k\">=</span> data<span class=\"k\">.</span>chat_id<span class=\"k\">;</span>","\t\t\t<span class=\"k\">var</span> user_id <span class=\"k\">=</span> data<span class=\"k\">.</span>user_id<span class=\"k\">;</span>","","\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span>message <span class=\"k\">+</span> <span class=\"s\">\" - \"</span> <span class=\"k\">+</span> chat_id <span class=\"k\">+</span> <span class=\"s\">\" - \"</span> <span class=\"k\">+</span> user_id<span class=\"k\">);</span>","\t\t\tmodel<span class=\"k\">.</span>save_message<span class=\"k\">(</span>message<span class=\"k\">,</span> chat_id<span class=\"k\">,</span> user_id<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">,</span> message_object<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(!</span>success<span class=\"k\">)</span>","\t\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","","\t\t\t\t<span class=\"k\">var</span> content <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","\t\t\t\tmu<span class=\"k\">.</span>compileAndRender<span class=\"k\">(</span><span class=\"s\">\"chat_message.mustache\"</span><span class=\"k\">,</span> message_object<span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">\"data\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t\tcontent <span class=\"k\">+=</span> data<span class=\"k\">;</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">).</span>on<span class=\"k\">(</span><span class=\"s\">\"end\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","\t\t\t\t\tio<span class=\"k\">.</span>sockets<span class=\"k\">.</span><span class=\"k\">in</span><span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>chat_id<span class=\"k\">)).</span>emit<span class=\"k\">(</span><span class=\"s\">\"message\"</span><span class=\"k\">,</span> <span class=\"k\">{</span>","\t\t\t\t\t\tcontent<span class=\"k\">:</span> content","\t\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\tsocket<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"rejoin\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tsocket<span class=\"k\">.</span>join<span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>data<span class=\"k\">.</span>chat_id<span class=\"k\">));</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","","\t\tsocket<span class=\"k\">.</span>on<span class=\"k\">(</span><span class=\"s\">\"add\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>data<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span>data<span class=\"k\">);</span>","\t\t\t<span class=\"k\">var</span> partner_socket <span class=\"k\">=</span> sockets<span class=\"k\">[</span>data<span class=\"k\">.</span>user_id<span class=\"k\">];</span>","\t\t\t<span class=\"k\">if</span><span class=\"k\">(!</span>partner_socket<span class=\"k\">)</span>","\t\t\t\t<span class=\"k\">return</span><span class=\"k\">;</span>","","\t\t\tpartner_socket<span class=\"k\">.</span>join<span class=\"k\">(</span>JSON<span class=\"k\">.</span>stringify<span class=\"k\">(</span>data<span class=\"k\">.</span>chat_id<span class=\"k\">));</span>","\t\t\tpartner_socket<span class=\"k\">.</span>emit<span class=\"k\">(</span><span class=\"s\">\"added\"</span><span class=\"k\">,</span> data<span class=\"k\">.</span>chat_id<span class=\"k\">);</span>","","\t\t\t<span class=\"c\">// Add member to database</span>","\t\t\tmodel<span class=\"k\">.</span>add_chat_member<span class=\"k\">(</span>data<span class=\"k\">.</span>chat_id<span class=\"k\">,</span> data<span class=\"k\">.</span>user_id<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span>success<span class=\"k\">)</span> <span class=\"k\">{</span>","\t\t\t\t<span class=\"k\">if</span><span class=\"k\">(</span>success<span class=\"k\">)</span>","\t\t\t\t\tconsole<span class=\"k\">.</span>log<span class=\"k\">(</span><span class=\"s\">\"Added \"</span> <span class=\"k\">+</span> data<span class=\"k\">.</span>user_id <span class=\"k\">+</span> <span class=\"s\">\" to \"</span> <span class=\"k\">+</span> data<span class=\"k\">.</span>chat_id<span class=\"k\">);</span>","\t\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t\t<span class=\"k\">}</span><span class=\"k\">);</span>","\t<span class=\"k\">}</span><span class=\"k\">);</span>","<span class=\"k\">}</span>","","exports<span class=\"k\">.</span>bind <span class=\"k\">=</span> bind<span class=\"k\">;</span>"];
_$jscoverage['socket_server.js'][1]++;
var io = require("socket.io");
_$jscoverage['socket_server.js'][2]++;
var model = require("./model.js");
_$jscoverage['socket_server.js'][3]++;
var mu = require("mu2");
_$jscoverage['socket_server.js'][4]++;
mu.root = (__dirname + "../../../frontend/templates");
_$jscoverage['socket_server.js'][8]++;
var sockets = {};
_$jscoverage['socket_server.js'][10]++;
function bind(server) {
  _$jscoverage['socket_server.js'][11]++;
  io = io.listen(server);
  _$jscoverage['socket_server.js'][12]++;
  io.set("origins", "*:80");
  _$jscoverage['socket_server.js'][14]++;
  console.log("Bound server.");
  _$jscoverage['socket_server.js'][16]++;
  io.sockets.on("connection", (function (socket) {
  _$jscoverage['socket_server.js'][17]++;
  socket.on("init", (function (data) {
  _$jscoverage['socket_server.js'][18]++;
  console.log("init");
  _$jscoverage['socket_server.js'][19]++;
  if (sockets[data.user_id]) {
    _$jscoverage['socket_server.js'][20]++;
    sockets[data.user_id].disconnect();
  }
  _$jscoverage['socket_server.js'][22]++;
  socket.set("user_id", data.user_id);
  _$jscoverage['socket_server.js'][23]++;
  sockets[data.user_id] = socket;
  _$jscoverage['socket_server.js'][25]++;
  socket.emit("inited");
}));
  _$jscoverage['socket_server.js'][28]++;
  socket.on("disconnect", (function () {
  _$jscoverage['socket_server.js'][29]++;
  socket.get("user_id", (function (error, user_id) {
  _$jscoverage['socket_server.js'][30]++;
  (delete sockets[user_id]);
}));
}));
  _$jscoverage['socket_server.js'][34]++;
  socket.on("create", (function (data) {
  _$jscoverage['socket_server.js'][35]++;
  var user_id = data.user_id;
  _$jscoverage['socket_server.js'][36]++;
  var partner_id = data.partner_id;
  _$jscoverage['socket_server.js'][37]++;
  model.create_chat([user_id, partner_id], (function (success, chat) {
  _$jscoverage['socket_server.js'][38]++;
  if (success) {
    _$jscoverage['socket_server.js'][39]++;
    socket.emit("created", chat._id);
    _$jscoverage['socket_server.js'][40]++;
    socket.join(JSON.stringify(chat._id));
    _$jscoverage['socket_server.js'][42]++;
    var partner_socket = sockets[partner_id];
    _$jscoverage['socket_server.js'][43]++;
    if ((! partner_socket)) {
      _$jscoverage['socket_server.js'][44]++;
      console.log("Unable to find partner socket.");
      _$jscoverage['socket_server.js'][45]++;
      return;
    }
    _$jscoverage['socket_server.js'][48]++;
    partner_socket.emit("added", chat._id);
    _$jscoverage['socket_server.js'][49]++;
    partner_socket.join(JSON.stringify(chat._id));
  }
}));
}));
  _$jscoverage['socket_server.js'][54]++;
  socket.on("message", (function (data) {
  _$jscoverage['socket_server.js'][55]++;
  var message = data.message;
  _$jscoverage['socket_server.js'][56]++;
  var chat_id = data.chat_id;
  _$jscoverage['socket_server.js'][57]++;
  var user_id = data.user_id;
  _$jscoverage['socket_server.js'][59]++;
  console.log((message + " - " + chat_id + " - " + user_id));
  _$jscoverage['socket_server.js'][60]++;
  model.save_message(message, chat_id, user_id, (function (success, message_object) {
  _$jscoverage['socket_server.js'][61]++;
  if ((! success)) {
    _$jscoverage['socket_server.js'][62]++;
    return;
  }
  _$jscoverage['socket_server.js'][64]++;
  var content = "";
  _$jscoverage['socket_server.js'][65]++;
  mu.compileAndRender("chat_message.mustache", message_object).on("data", (function (data) {
  _$jscoverage['socket_server.js'][66]++;
  content += data;
})).on("end", (function () {
  _$jscoverage['socket_server.js'][68]++;
  io.sockets["in"](JSON.stringify(chat_id)).emit("message", {content: content});
}));
}));
}));
  _$jscoverage['socket_server.js'][75]++;
  socket.on("rejoin", (function (data) {
  _$jscoverage['socket_server.js'][76]++;
  socket.join(JSON.stringify(data.chat_id));
}));
  _$jscoverage['socket_server.js'][79]++;
  socket.on("add", (function (data) {
  _$jscoverage['socket_server.js'][80]++;
  console.log(data);
  _$jscoverage['socket_server.js'][81]++;
  var partner_socket = sockets[data.user_id];
  _$jscoverage['socket_server.js'][82]++;
  if ((! partner_socket)) {
    _$jscoverage['socket_server.js'][83]++;
    return;
  }
  _$jscoverage['socket_server.js'][85]++;
  partner_socket.join(JSON.stringify(data.chat_id));
  _$jscoverage['socket_server.js'][86]++;
  partner_socket.emit("added", data.chat_id);
  _$jscoverage['socket_server.js'][89]++;
  model.add_chat_member(data.chat_id, data.user_id, (function (success) {
  _$jscoverage['socket_server.js'][90]++;
  if (success) {
    _$jscoverage['socket_server.js'][91]++;
    console.log(("Added " + data.user_id + " to " + data.chat_id));
  }
}));
}));
}));
}
_$jscoverage['socket_server.js'][97]++;
exports.bind = bind;
